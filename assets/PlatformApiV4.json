{
  "openapi": "3.0.1",
  "info": {
    "title": "Veracity Platform Api V4 (Test)",
    "description": "### Documentation and scenarios\r\n\r\n#### Applications\r\n\r\nThe `Applications` interface provides methods to interact with applications within a tenant. It supports retrieving applications, verifying user licenses, and managing user and group licenses.\r\n\r\n- **GetApplications** (`GET /tenants/{tenantId}/applications`): Retrieves applications installed in a tenant with support for OData query parameters.\r\n- **GetApplication** (`GET /tenants/{tenantId}/applications/{applicationId}`): Retrieves a specific application by its public ID.\r\n- **GetLicenses** (`GET /tenants/{tenantId}/applications/{applicationId}/licenses`): Retrieves all direct users and groups with licenses for an application.\r\n- **VerifyUserLicense** (`GET /tenants/{tenantId}/applications/{applicationId}/licenses/{userId}`): Verifies if a user has a license for an application.\r\n- **GetApplicationUsersExploded** (`GET /tenants/{tenantId}/applications/{applicationId}/users`): Retrieves all users, including those inherited from groups, with deduplication support.\r\n- **AddUserOrGroupLicense** (`POST /tenants/{tenantId}/applications/{applicationId}/licenses`): Adds a user or group license to an application.\r\n- **SetAccessLevel** (`PUT /tenants/{tenantId}/applications/{applicationId}/licenses/{entityId}`): Sets access level on an existing subscription.\r\n- **UpdateLicense** (`PATCH /tenants/{tenantId}/applications/{applicationId}/licenses/{entityId}`): Updates license details using a JSON patch document.\r\n- **DeleteLicense** (`DELETE /tenants/{tenantId}/applications/{applicationId}/licenses/{entityId}`): Removes a subscription.\r\n- **GetTenantsForApplication** (`GET /applications/{applicationId}/tenants`): Retrieves all tenants where the application is installed.\r\n- **PatchApplication** (`PATCH /tenants/{tenantId}/applications/{applicationId}`): Updates application extension properties using a JSON patch document.\r\n- **GetAdministrators** (`GET /tenants/{tenantId}/applications/{applicationId}/administrators`): Lists application administrators.\r\n- **AddAdministrator** (`POST /tenants/{tenantId}/applications/{applicationId}/administrators/{userId}`): Adds a user as an application administrator.\r\n- **DeleteAdministrator** (`DELETE /tenants/{tenantId}/applications/{applicationId}/administrators/{userId}`): Removes an application administrator.\r\n\r\n#### Groups\r\n\r\nThe `Groups` interface provides methods to manage groups and their members within a tenant. It supports retrieving groups, group members, and updating group properties.\r\n\r\n- **GetGroups** (`GET /tenants/{tenantId}/groups`): Retrieves groups in a tenant with support for OData query parameters.\r\n- **GetGroup** (`GET /tenants/{tenantId}/groups/{groupId}`): Retrieves a specific group by its ID.\r\n- **GetGroupMembers** (`GET /tenants/{tenantId}/groups/{groupId}/members`): Retrieves all direct users and groups within a group.\r\n- **GetMembersExploded** (`GET /tenants/{tenantId}/groups/{groupId}/members/exploded`): Retrieves all users, including those inherited from groups.\r\n- **PatchMember** (`PATCH /tenants/{tenantId}/groups/{groupId}/members/{memberId}`): Updates member properties using a JSON patch document.\r\n- **PatchGroup** (`PATCH /tenants/{tenantId}/groups/{groupId}`): Updates group properties using a JSON patch document.\r\n- **GetMemberOf** (`GET /tenants/{tenantId}/groups/{groupId}/memberOf`): Lists all groups a specific group is a member of.\r\n- **GetApplications** (`GET /tenants/{tenantId}/groups/{groupId}/applications`) Get the applications licensed for the group\r\n\r\n#### Me\r\n\r\nThe `Me` interface provides methods to retrieve information about the logged-on user, including their applications, groups, and tenants.\r\n\r\n- **GetMyInfo** (`GET /me`): Retrieves details for the logged-on user.\r\n- **GetMyApplications** (`GET /me/applications`): Retrieves all applications the user has access to.\r\n- **GetMyTenantApplications** (`GET /me/tenants/{tenantId}/applications`): Retrieves all applications in a tenant the user has access to.\r\n- **GetMyGroups** (`GET /me/tenants/{tenantId}/groups`): Retrieves the groups the logged-on user belongs to.\r\n- **GetMyTenants** (`GET /me/tenants`): Retrieves all tenants the logged-on user is a member of.\r\n- **GetMyTenantsWithApplication** (`GET /me/applications/{applicationId}/tenants`): Retrieves all tenants the logged-on user is a member of and has access to a specific application.\r\n- **VerifyUserPolicy** (`GET /me/applications/{applicationId}/.policy()`): Verifies Veracity user policies and returns appropriate responses based on policy compliance.\r\n\r\n#### Tenants\r\n\r\nThe `Tenants` interface provides methods to interact with tenants, including retrieving tenant details and managing tenant administrators.\r\n\r\n- **GetTenant** (`GET /tenants/{tenantId}`): Retrieves a tenant by its ID.\r\n- **GetTenants** (`GET /tenants`): Retrieves a list of tenants linked to a specific service.\r\n- **GetAdmin** (`GET /tenants/{tenantId}/admins/{userId}`): Retrieves admin details for a user by their ID.\r\n- **GetAdmins** (`GET /tenants/{tenantId}/admins`): Retrieves all admins of a tenant, both global and local.\r\n\r\n#### Users\r\n\r\n\r\nThe `Users` interface provides methods to manage users within a tenant, including retrieving user details, groups, and applications.\r\n\r\n- **GetUserByEmail** (`GET /tenants/{tenantId}/users/.email({email})`): Retrieves a user by their email address.\r\n- **GetUser** (`GET /users/{userId}`): Retrieves a user by their ID.\r\n- **ListUsers** (`GET /tenants/{tenantId}/users`): Retrieves a list of users in a tenant with support for OData query parameters.\r\n- **GetUserInTenant** (`GET /tenants/{tenantId}/users/{userId}`): Retrieves the details of a user in a tenant.\r\n- **GetGroupsForUser** (`GET /tenants/{tenantId}/users/{userId}/groups`): Retrieves the groups associated with a user.\r\n- **GetApplicationsForUser** (`GET /tenants/{tenantId}/users/{userId}/applications`): Retrieves the applications associated with a user.\r\n- **GetTenantsForUser** (`GET /users/{userId}/tenants`): Retrieves the tenants a user is a member of.\r\n- **ResolveUsers** (`POST /tenants/{tenantId}/users`): Retrieves full user details for a list of user IDs.\r\n- **UpdateUserProperties** (`PATCH /tenants/{tenantId}/users/{userId}`): Updates the extension properties for a user using a JSON patch document.\r\n\r\n### According JsonPatch\r\n\r\nThe api uses jsonPatch to update data within the graph. Common use-case for updating an entity in the graph is to add/update or remove extension properties. Here are some sample updates:\r\n\r\nLet's say we start out with this properties collection:\r\n```JSON\r\n\"properties\": [\r\n        {\r\n          \"name\": \"vtmd2_allowedVessels\",\r\n          \"value\": \"\"\r\n        }\r\n      ]\r\n```\r\n\r\nUpdate a user to indicate the vessels the user can see in the app and mark the new application user as seeb by an admin.\r\n\r\n```JSON\r\n[\r\n  {\r\n    \"value\": {\r\n      \"Name\": \"vtmd2_allowedVessels\",\r\n      \"Value\": \"7911545;7911533\"\r\n    },\r\n    \"path\": \"/properties/-\",\r\n    \"op\": \"replace\"\r\n  },\r\n  {\r\n    \"value\": {\r\n      \"Name\": \"vtmd2_isSeen\",\r\n      \"Value\": \"true\"\r\n    },\r\n    \"path\": \"/properties/-\",\r\n    \"op\": \"add\"\r\n  }\r\n]\r\n```\r\n\r\nThis result in the following properties:\r\n```json\r\n \"properties\": [\r\n        {\r\n          \"name\": \"vtmd2_allowedVessels\",\r\n          \"value\": \"7911545;7911533\"\r\n        },\r\n        {\r\n          \"name\": \"vtmd2_isSeen\",\r\n          \"value\": \"true\"\r\n        }\r\n      ]\r\n```\r\n\r\nLet's say we want remove the allowedVessels list and reset the isSeen flag. We remove the the  vtmd2_allowedVessels property by it's index and then do other operations. This is due to the fact that the order of elements can change when we do other operations, and remove does not support removing by name.\r\n\r\nThe same type of operations can be performed on any entity or relationship in the graph.\r\n\r\n```JSON\r\n[\r\n      \"path\": \"/properties/0\",\r\n    \"op\": \"remove\"\r\n  },\r\n  {\r\n    \"value\": {\r\n      \"Name\": \"vtmd2_isSeen\",\r\n      \"Value\": \"false\"\r\n    },\r\n    \"path\": \"/properties/-\",\r\n    \"op\": \"replace\"\r\n  }\r\n]\r\n```\r\n\r\nThis result in the following properties:\r\n```json\r\n \"properties\": [\r\n        {\r\n          \"name\": \"vtmd2_isSeen\",\r\n          \"value\": \"false\"\r\n        }\r\n      ]\r\n```\r\n\r\nthe nuget packages Veracity provides does have helper methods to construct these queries and run tem directly against the api.\r\n\r\n```CS\r\n    user.MakeJsonPatch()\r\n        .AddOrUpdateProperty(\"allowedVessels\", \"7911545;7911533\")\r\n        .AddOrUpdateProperty(\"isSeen\", \"true\")\r\n        .ExecutePatchUserAsync();\r\n```\r\n\r\n### Scenario Usage\r\n\r\n#### common to all\r\n- **Policy**: use `POST /me/applications/{applicationId}/.policy()` to check that all user policies are fulfilled, usually called right after the token is aquired\r\n\r\n#### Seating Tracker for Hot Seating Workplaces (simple and intermediate applications )\r\n\r\nThis application type leverages Veracity Access hub to assign license and roles to the users.\r\n\r\n- **Multi-tenant application**: Use `GET /me/applications/{applicationId}/tenants` to retrieve tenants the user has access to and the application is installed in, used to present the tenant selector screen.\r\n- **Access levels and permissions**: Use `GET /tenants/{tenantId}/applications/{applicationId}/licenses`to list all users and `GET /tenants/{tenantId}/applications/{applicationId}/licenses/{userId}` to manage and verify user licenses and the accessLevel.\r\n\r\n\r\n#### Health and Safety Tracker Application (simple authorization model for most users, but advanced for some)\r\n\r\nThis application type leverages Veracity Access Hub to assign the least privilege to the users, while advanced rights must be granted within the application's admin module.\r\n\r\n- **Detailed permissions**: Use `GET /tenants/{tenantId}/groups` and `GET /tenants/{tenantId}/groups/{groupId}/members` to manage group-based permissions.\r\n- **Local copy for performance**: Use `GET /tenants/{tenantId}/applications/{applicationId}/users` to retrieve all users (direct and indirect) and manage local copies for performance.\r\n\r\n#### Applications with no clear least privilege and a complex authorization model\r\n\r\nThis category includes applications with row or entity level security. The authorization requirements are based on data stored in the application and that is not know to Veracity Access Hub.\r\n\r\n- **Complex authorization**: Use `GET /tenants/{tenantId}/groups` and `GET /tenants/{tenantId}/groups/{groupId}/members` to manage group-based permissions.\r\n- **inform veracity about application license**: Use  `POST /tenants/{tenantId}/applications/{applicationId}/licenses`this will show the tile in myServices and make sure that Veracity can count licenses (and enforce cap if applicable) in the tenant. \r\n\r\n\r\n#### Additional Information\r\n\r\nThese interfaces and methods provide a comprehensive way to manage multi-tenant applications, user permissions, and group memberships, aligning with the scenarios described.\r\n\r\nAll applications can leverage the Veracity domain events to replicate data locally to improve performance and remove single points of failure. This is not recommended for simple applications or applications with limited budgets or developers since the complexity of nested groups can make it too costly to implement.\r\n\r\nThere is a NuGet package available on nuget.org that plugs into the other packages Veracity provides: Veracity.Core.Api.V4\n\n> Service build version 20241015.1 - Environment: Test",
    "version": "Veracity Platform api V4"
  },
  "servers": [
    {
      "url": "https://api-v4-ica5dyfal6qp2-test.azurewebsites.net"
    }
  ],
  "paths": {
    "/tenants/{tenantId}/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "Get applications installed in the tenant\n\nquery sample: tenants/be0c84cb-7a4a-4114-aa17-9c0224b084cf/applications?$filter=serviceId eq '88dd8fdc-c6db-49d4-89f5-76bc4e7c8d57'&$top=1&$skip=0&search=Interface<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.GetApplications.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "odata",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.ApplicationResponse_"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.ApplicationResponse_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.ApplicationResponse_"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/applications/{applicationId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "Get application by public id<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.GetApplication.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "Update extension properties for a group. Extension properties have the name format {prefix}_property name. Prefixes are registered in developer.veracity.com<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.PatchApplication.PATCH.3",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/applications/{applicationId}/licenses": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "Get all direct users and/or groups. LicenseType values - profile: personal licenses, userGroup: license given to a group or empty string: get both personal and group licenses<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.GetLicenses.GET.3",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "licenseType",
            "in": "query",
            "description": "Represents the type of entity.",
            "schema": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.EntityTypes"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "Add user or group license to application<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.AddLicense.POST.3",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Veracity.Core.Api.V4.Requests.LicenseRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Veracity.Core.Api.V4.Requests.LicenseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Veracity.Core.Api.V4.Requests.LicenseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Veracity.Core.Api.V4.Requests.LicenseRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/applications/{applicationId}/licenses/{userId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "Verify user license<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.VerifyUserLicense.GET.3",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/applications/{applicationId}/users": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "All users, both direct and inherited\r\n\r\n",
        "description": "Get all users including inherited from groups, deduplication is by default in effect. disable deduplication to detect users with multiple paths to the application in the tenant.<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.GetApplicationUsersExploded.GET.3",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "deduplicate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/applications/{applicationId}/licenses/{entityId}": {
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Only applicable for applications with access levels\r\n\r\n",
        "description": "Set access level on an existing subscription. entityId is the id of the group or the person, and licenseType (profile,userGroup) indicates which type of license you are updating<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.SetAccessLevel.PUT.5",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "licenseType",
            "in": "query",
            "description": "Represents the type of entity.",
            "schema": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.EntityTypes"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Applications"
        ],
        "summary": "You can only update extension properties.\r\n\r\n",
        "description": "Update license details. Extension properties have the name format {prefix}_property name. Prefixes are registered in developer.veracity.com. EntityId is the id of the group or the person, and entityType (profile,userGroup) indicates which type of license you are updating<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.UpdateLicense.PATCH.5",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "licenseType",
            "in": "query",
            "description": "Represents the type of entity.",
            "schema": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.EntityTypes"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "Remove subscription. EntityId is the id of the group or the person, and licenseType (profile,userGroup) indicates which type of license you are removing<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.DeleteLicense.DELETE.4",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "licenseType",
            "in": "query",
            "description": "Represents the type of entity.",
            "schema": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.EntityTypes"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/applications/{applicationId}/tenants": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "Get all tenants where application is installed<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.GetTenantsForApplication.GET.1",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/applications/{applicationId}/administrators": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "List application administrators<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.GetAdministrators.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.AdminUser"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.AdminUser"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.AdminUser"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/applications/{applicationId}/administrators/{userId}": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "Add user as application administrator, this is only used by hybrid and service managed applications. If the application has access levels defined, this must be provided if the user doesn't have a license from before.<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.AddAdministrator.POST.4",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "accessLevel",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "",
        "description": "Remove application administrator, this is only used by hybrid and service managed applications<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "ApplicationsApiController.DeleteAdministrator.DELETE.4",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "removeLicense",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/tenants/{tenantId}/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "",
        "description": "Get groups in the tenant\n\nquery sample: tenants/be0c84cb-7a4a-4114-aa17-9c0224b084cf/groups?$filter=name eq 'AN_Techleads'&$top=1&$skip=0<br/>Retrieve groups and group members to determine access rights within your application\n\ntenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "GroupsApiController.GetGroups.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "odata",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.GroupResponse_"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.GroupResponse_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.GroupResponse_"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/groups/{groupId}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "",
        "description": "Get group by id<br/>Retrieve groups and group members to determine access rights within your application\n\ntenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "GroupsApiController.GetGroup.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Groups"
        ],
        "summary": "",
        "description": "Update extension properties for a group. Extension properties have the name format {prefix}_property name. Prefixes are registered in developer.veracity.com. Pleas note that the order of operations can impact the result<br/>Retrieve groups and group members to determine access rights within your application\n\ntenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "GroupsApiController.PatchGroup.PATCH.3",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/groups/{groupId}/members": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "",
        "description": "Get all direct users and groups<br/>Retrieve groups and group members to determine access rights within your application\n\ntenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "GroupsApiController.GetGroupMembers.GET.3",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "memberType",
            "in": "query",
            "description": "Represents the type of entity.",
            "schema": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.EntityTypes"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.MemberResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.MemberResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.MemberResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/groups/{groupId}/users/exploded": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "",
        "description": "Get all users including inherited from groups<br/>Retrieve groups and group members to determine access rights within your application\n\ntenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "GroupsApiController.GetMembersExploded.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/groups/{groupId}/members/{entityId}": {
      "patch": {
        "tags": [
          "Groups"
        ],
        "summary": "",
        "description": "Update extension properties  for a group membership. extension properties have the name format {prefix}_property name. Prefixes are registered in developer.veracity.com<br/>Retrieve groups and group members to determine access rights within your application\n\ntenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "GroupsApiController.PatchMember.PATCH.5",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "Represents the type of entity.",
            "schema": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.EntityTypes"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.MemberResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.MemberResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.MemberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/groups/{groupId}/memberOf": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "",
        "description": "List all groups this group is a member of<br/>Retrieve groups and group members to determine access rights within your application\n\ntenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "GroupsApiController.GetMemberOf.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/groups/{groupId}/applications": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "",
        "description": "Get all applications this group has a license for<br/>Retrieve groups and group members to determine access rights within your application\n\ntenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "GroupsApiController.GetApplications.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "",
        "description": "Get details for the logged on user<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "MeController.GetMyInfo.GET.0",
        "parameters": [
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetails2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetails2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetails2Response"
                }
              }
            }
          }
        }
      }
    },
    "/me/applications": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "",
        "description": "Get all applications the user has access to<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "MeController.GetMyApplications.GET.0",
        "parameters": [
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/me/tenants/{tenantId}/applications": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "",
        "description": "Get all applications in a tenant the user has access to<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "MeController.GetMyTenantApplications.GET.1",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/me/tenants/{tenantId}/groups": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "",
        "description": "Get the groups the logged on user belongs to<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "MeController.GetMyGroups.GET.1",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/me/tenants": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "",
        "description": "Get all tenants the logged on user is a member of<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "MeController.GetMyTenants.GET.0",
        "parameters": [
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponseEx"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponseEx"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponseEx"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/me/applications/{applicationId}/tenants": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "",
        "description": "Get all tenants the logged on user is a member of and has access to the application<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "MeController.GetMyTenantsWithApplication.GET.1",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/me/applications/{applicationId}/.policy()": {
      "post": {
        "tags": [
          "Me"
        ],
        "summary": "! This endpoint will ensure that federated users are properly enrolled !\r\n\r\n",
        "description": "Verify Veracity user policies, returns an empty 202 response if all policies are ok, 406 with an error response that contains the url to send the user to correct the policy issue<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "MeController.VerifyUserPolicy.POST.2",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "returnUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "StatusService"
        ],
        "summary": "",
        "description": "Returns 200 when all dependencies are ok, 424 if there are some non essential dependency failures and 500 when essential dependencies are unreachable or the service is down<br/>",
        "operationId": "StatusServiceController.GetServiceHealthStatus.GET.0",
        "parameters": [
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStatus"
                }
              }
            }
          },
          "424": {
            "description": "Failed Dependency",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStatus"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "",
        "description": "Get tenant by id, tenantId can be the guid or the dnvCustomerId for the tenant<br/>",
        "operationId": "TenantsApiController.GetTenant.GET.1",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tenants": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "",
        "description": "Get list of tenants linked to your service<br/>",
        "operationId": "TenantsApiController.GetTenants.GET.1",
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/Administrators/{userId}": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "",
        "description": "Get the admin details for a user by their id<br/>",
        "operationId": "TenantsApiController.GetAdmin.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserRoles"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserRoles"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserRoles"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/Administrators": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "",
        "description": "Get all admins of the tenant, both global and local.<br/>",
        "operationId": "TenantsApiController.GetAdmins.GET.1",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserRoles"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserRoles"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserRoles"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/users/.email({email})": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "",
        "description": "Retrieves a user by their email address<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "UsersApiController.GetUserByEmail.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "",
        "description": "Get user by id<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "UsersApiController.GetUser.GET.1",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetails2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetails2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetails2Response"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "",
        "description": "List users in a tenant\n\nquery sample: tenants/be0c84cb-7a4a-4114-aa17-9c0224b084cf/users?$filter=name eq 'Normann, Ola'&$top=1&$skip=0<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "UsersApiController.ListUsers.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "odata",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.UserResponse_"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.UserResponse_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.UserResponse_"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "",
        "description": "Get full user details for a list of user ids<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "UsersApiController.ResolveUsers.POST.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetails2Response"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetails2Response"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetails2Response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "",
        "description": "Get user details<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "UsersApiController.GetUserInTenant.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetailsResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "",
        "description": "Update extension properties  for a user. Extension properties have the name format {prefix}_property name. Prefixes are registered in developer.veracity.com<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "UsersApiController.PatchUser.PATCH.3",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/users/{userId}/groups": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "",
        "description": "Get user details<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "UsersApiController.GetGroupsForUser.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{tenantId}/users/{userId}/applications": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "",
        "description": "Get all applications in a tenant the user has access to<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "UsersApiController.GetApplicationsForUser.GET.2",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationLicenseResponse"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/tenants": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "",
        "description": "Get the tenants a user is member of<br/>tenantId can be the guid or the dnvCustomerId for the tenant",
        "operationId": "UsersApiController.GetTenantsForUser.GET.1",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "request-id",
            "in": "header",
            "description": "A correlation token to use when looking in the logs.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ErrorDetail"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponseEx"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponseEx"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.TenantResponseEx"
                  },
                  "description": "A list of items. This class is used to represent the result of a query."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JsonPatchDocument": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Operation"
        },
        "description": "Array of operations to perform"
      },
      "Operation": {
        "type": "object",
        "properties": {
          "op": {
            "enum": [
              "add",
              "remove",
              "replace",
              "move",
              "copy"
            ],
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "from": {
            "type": "string"
          }
        }
      },
      "Veracity.Common.Health.Status.Api.DependencyState": {
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "nullable": true
          },
          "componentType": {
            "type": "string",
            "nullable": true
          },
          "observedValue": {
            "nullable": true
          },
          "observedUnit": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStateTypes"
          },
          "affectedEndpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "output": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "critical": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Veracity.Common.Health.Status.Api.HealthStateTypes": {
        "enum": [
          "Pass",
          "Warn",
          "Fail"
        ],
        "type": "string"
      },
      "Veracity.Common.Health.Status.Api.HealthStatus": {
        "type": "object",
        "properties": {
          "checks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.DependencyState"
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Veracity.Common.Health.Status.Api.HealthStateTypes"
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "releaseId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "output": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "information": {
            "type": "string",
            "nullable": true
          },
          "subCode": {
            "type": "integer",
            "format": "int32"
          },
          "supportCode": {
            "type": "string",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Veracity.Core.Api.V4.Requests.LicenseRequest": {
        "required": [
          "entityId",
          "licenseType"
        ],
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "The veracity user id for profile members and the group id for group members",
            "format": "uuid"
          },
          "licenseType": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.EntityTypes"
          },
          "accessLevel": {
            "type": "string",
            "description": "Optional: used when provisioning applications that support accessLevels",
            "nullable": true
          },
          "isApplicationAdmin": {
            "type": "boolean",
            "description": "Grant the users to manage licenses for this application"
          },
          "canAddUsersToTenant": {
            "type": "boolean",
            "description": "Grant the user the ability to add users to the tenant"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties. Extra information kept on the object.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a license request."
      },
      "Veracity.Core.Api.V4.Responses.AdminItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the id of the application or group",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "the name of the application or group",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "the type of the item, application or group",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represent the local admins within the tenant."
      },
      "Veracity.Core.Api.V4.Responses.AdminUser": {
        "type": "object",
        "properties": {
          "isApplicationAdmin": {
            "type": "boolean",
            "description": "Value indicating whether the user is an application administrator. This can be combined with user admin, if isUserAdmin is false this user can only add users from the tenant pool, not add new users to the tenant."
          },
          "isTenantAdmin": {
            "type": "boolean",
            "description": "Value indicating whether the user is a tenant administrator. When this is true, the other admin flags are not relevant."
          },
          "isUserAdmin": {
            "type": "boolean",
            "description": "Value indicating whether the user is a user administrator, meaning the user can add new users to the tenant."
          },
          "profileId": {
            "type": "string",
            "description": "The globally unique identifier (GUID) for the user (across all tenants)¨.",
            "format": "uuid"
          },
          "isLocked": {
            "type": "boolean",
            "description": "the isLocked is true, the user cannot be removed from the tenant. The user is normally a service principal that comes with one of the applications and is required for the applications to work."
          },
          "accessHubProfileUrl": {
            "type": "string",
            "description": "The url to the member profile page in access hub.",
            "format": "uri",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email of the user.",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user.",
            "format": "uuid"
          },
          "isServicePrincipal": {
            "type": "boolean",
            "description": "Value indicating whether the user is a service principal."
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a application administrator.",
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.ApplicationLicenseResponse": {
        "type": "object",
        "properties": {
          "accessLevel": {
            "type": "string",
            "description": "The access level of the license. Only applicable for application that has access levels defined in developer.veracity.com.",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "description": "The ID of the application. This is the same as the serviceId in developer.",
            "format": "uuid"
          },
          "applicationInstanceId": {
            "type": "string",
            "description": "The globally unique identifier (GUID) for the application.",
            "format": "uuid"
          },
          "accessHubApplicationUrl": {
            "type": "string",
            "description": "The url to the application page in access hub.",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a response for an application license.",
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.ApplicationResponse": {
        "type": "object",
        "properties": {
          "installmentState": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseStates"
          },
          "managementMode": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ManagementModes"
          },
          "orderNumber": {
            "type": "string",
            "description": "The order number of the application. this is populated by the marketplace when the application is purchased.",
            "nullable": true
          },
          "accessLevels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lists the available access levels for the application.",
            "nullable": true
          },
          "production": {
            "type": "boolean",
            "description": "Value indicating whether the application is in production."
          },
          "pricingTier": {
            "type": "string",
            "description": "The pricing tier of the application. This is used by the marketplace to indicate variant, sku , or pricing tier, only used by the application itself.\r\nThis is a free text field and can be used by the application to store any information about the pricing tier.",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "description": "The ID of the application. This is the same as the serviceId in developer.",
            "format": "uuid"
          },
          "applicationInstanceId": {
            "type": "string",
            "description": "The globally unique identifier (GUID) for the application.",
            "format": "uuid"
          },
          "accessHubApplicationUrl": {
            "type": "string",
            "description": "The url to the application page in access hub.",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response for an application.",
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.EntityTypes": {
        "enum": [
          "profile",
          "userGroup"
        ],
        "type": "string",
        "description": "Represents the type of entity."
      },
      "Veracity.Core.Api.V4.Responses.ErrorDetail": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "This is the correlation id for the request, it can be used to track the request in the logs. You can control the value by setting the request-id header in the request",
            "nullable": true,
            "readOnly": true
          },
          "supportCode": {
            "type": "string",
            "description": "this will be deprecated in the future, use CorrelationId instead",
            "nullable": true,
            "readOnly": true
          },
          "subCode": {
            "type": "integer",
            "description": "an additional code that can be used to identify the error, pass this code to the support team when reporting the error",
            "format": "int32",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "description": "A human readable message that describes the error",
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "string",
            "description": "Additional information about the error",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Describes an error that occured during the processing of a request"
      },
      "Veracity.Core.Api.V4.Responses.ExtensionProperty": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the property. Properties are case sensitive and shall use {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The value of the property.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents an extension property."
      },
      "Veracity.Core.Api.V4.Responses.GroupResponse": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "The ID of the group.",
            "format": "uuid"
          },
          "builtIn": {
            "type": "boolean",
            "description": "Value indicating whether the group is built-in system group like TenantAdmins."
          },
          "accessHubGroupUrl": {
            "type": "string",
            "description": "The url to the group page in access hub",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a response containing information about a group.",
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.LicenseResponse": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "description": "The globally unique identifier (GUID) for the object¨. Profile id for profile licenses and the group id for group licenses",
            "format": "uuid"
          },
          "accessLevel": {
            "type": "string",
            "description": "Indicates the accessLevel of the uses in the application instance, only applicable for applications with tenant wide roles. eg:  'owner', 'contributor', 'reader'.",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean",
            "description": "when the isLocked is true, the user cannot be removed from the application instance. The user is normally a service principal that comes with the application and is required for the application to work. This does not count towards the license count."
          },
          "email": {
            "type": "string",
            "description": "The email for profile licenses.",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.LicenseStates"
          },
          "isServicePrincipal": {
            "type": "boolean",
            "description": "Value indicating whether the user is a service principal.",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "The user id as found in Veracity Identity for profile licenses and the group id for group licenses",
            "format": "uuid"
          },
          "licenseType": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.EntityTypes"
          },
          "isApplicationAdmin": {
            "type": "boolean",
            "description": "Indicates that the user can add licenses to other users for this application.",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "description": "The ID of the application. This is the same as the serviceId in developer.",
            "nullable": true
          },
          "applicationInstanceId": {
            "type": "string",
            "description": "The ID of the instance of an application in tenant.",
            "nullable": true
          },
          "accessHubProfileUrl": {
            "type": "string",
            "description": "The url to the member profile page in access hub, this is only valid for profile licenses",
            "format": "uri",
            "nullable": true
          },
          "accessHubGroupUrl": {
            "type": "string",
            "description": "The url to the group page in access hub, only valid for group licenses",
            "format": "uri",
            "nullable": true
          },
          "accessHubApplicationUrl": {
            "type": "string",
            "description": "The url to the application page in access hub",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.LicenseStates": {
        "enum": [
          "Pending",
          "Active"
        ],
        "type": "string",
        "description": "Represents the license states."
      },
      "Veracity.Core.Api.V4.Responses.ManagementModes": {
        "enum": [
          "Legacy",
          "VeracityManaged",
          "Hybrid",
          "ServiceManaged"
        ],
        "type": "string",
        "description": "Represents the different management modes for the application."
      },
      "Veracity.Core.Api.V4.Responses.MemberResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The veracity user id for profile members and the group id for group members",
            "format": "uuid"
          },
          "objectId": {
            "type": "string",
            "description": "The profile id for profile members and the group id for group members",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "description": "Only used for profile entities",
            "nullable": true
          },
          "isServicePrincipal": {
            "type": "boolean",
            "description": "Value indicating if the user is a service principal",
            "nullable": true
          },
          "memberType": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.EntityTypes"
          },
          "isGroupAdmin": {
            "type": "boolean",
            "description": "Indicates that the user can add/remove members of this group."
          },
          "groupId": {
            "type": "string",
            "description": "The ID of the group.",
            "format": "uuid"
          },
          "accessHubGroupUrl": {
            "type": "string",
            "description": "Get the url to the group page in access hub",
            "format": "uri",
            "nullable": true
          },
          "accessHubProfileUrl": {
            "type": "string",
            "description": "Get the url to the member profile page in access hub, this is only valid for profile members",
            "format": "uri",
            "nullable": true
          },
          "accessHubMemberGroupUrl": {
            "type": "string",
            "description": "Get the url to the group member page in access hub, this is only valid for group members",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a member response.",
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.Metadata": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The entity type.",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "The creator.",
            "nullable": true,
            "readOnly": true
          },
          "createDate": {
            "type": "string",
            "description": "The creation date.",
            "format": "date-time",
            "readOnly": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "The modifier.",
            "nullable": true,
            "readOnly": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "The modification date.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the metadata information for the entities."
      },
      "Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.ApplicationResponse_": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ApplicationResponse"
            },
            "description": "The items in the current page",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "description": "The number of items in the current page",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of items in the result set. This value is only present if the result set is paged.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "nextPageUrl": {
            "type": "string",
            "description": "Contains the relative url to the next page of the result set. The url is only present if there are more results to fetch. It assumes a constant page size.",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A paged list of items. This class is used to represent the result of a paged query."
      },
      "Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.GroupResponse_": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.GroupResponse"
            },
            "description": "The items in the current page",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "description": "The number of items in the current page",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of items in the result set. This value is only present if the result set is paged.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "nextPageUrl": {
            "type": "string",
            "description": "Contains the relative url to the next page of the result set. The url is only present if there are more results to fetch. It assumes a constant page size.",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A paged list of items. This class is used to represent the result of a paged query."
      },
      "Veracity.Core.Api.V4.Responses.PagedList_1_Veracity.Core.Api.V4.Responses.UserResponse_": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.UserResponse"
            },
            "description": "The items in the current page",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "description": "The number of items in the current page",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of items in the result set. This value is only present if the result set is paged.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "nextPageUrl": {
            "type": "string",
            "description": "Contains the relative url to the next page of the result set. The url is only present if there are more results to fetch. It assumes a constant page size.",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A paged list of items. This class is used to represent the result of a paged query."
      },
      "Veracity.Core.Api.V4.Responses.TenantResponse": {
        "type": "object",
        "properties": {
          "legalEntityName": {
            "type": "string",
            "description": "The legal entity name.",
            "nullable": true
          },
          "dnvCustomerId": {
            "type": "string",
            "description": "The DNV customer ID.",
            "nullable": true
          },
          "legalEntityId": {
            "type": "string",
            "description": "The legal entity ID.",
            "nullable": true
          },
          "tenantType": {
            "type": "string",
            "description": "The tenant type.",
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "description": "The logo URI.",
            "format": "uri",
            "nullable": true
          },
          "groupsIsActivated": {
            "type": "boolean",
            "description": "Value indicating if group is activated"
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a response containing tenant information.",
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.TenantResponseEx": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The user id of the user that used in the query for the tenant",
            "format": "uuid"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "Indicates if the user that is used in the query is an admin of the tenant"
          },
          "legalEntityName": {
            "type": "string",
            "description": "The legal entity name.",
            "nullable": true
          },
          "dnvCustomerId": {
            "type": "string",
            "description": "The DNV customer ID.",
            "nullable": true
          },
          "legalEntityId": {
            "type": "string",
            "description": "The legal entity ID.",
            "nullable": true
          },
          "tenantType": {
            "type": "string",
            "description": "The tenant type.",
            "nullable": true
          },
          "logoUri": {
            "type": "string",
            "description": "The logo URI.",
            "format": "uri",
            "nullable": true
          },
          "groupsIsActivated": {
            "type": "boolean",
            "description": "Value indicating if group is activated"
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.UserDetails2Response": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The veracity UserId for the user.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "the users display name.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "the users email address",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "the users phone number",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "the users first name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "the users last name",
            "nullable": true
          },
          "isServicePrincipal": {
            "type": "boolean",
            "description": "Indicates if the user is a service principal or not."
          },
          "isActivated": {
            "type": "boolean",
            "description": "indicates if the user is activated or not."
          }
        },
        "additionalProperties": false,
        "description": "Represents the response containing user details."
      },
      "Veracity.Core.Api.V4.Responses.UserDetailsResponse": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "The first name of the user.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the user.",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "The phone number of the user.",
            "nullable": true
          },
          "profileId": {
            "type": "string",
            "description": "The globally unique identifier (GUID) for the user (across all tenants)¨.",
            "format": "uuid"
          },
          "accessHubProfileUrl": {
            "type": "string",
            "description": "Get the url to the member profile page in access hub, this is only valid for profile members",
            "format": "uri",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email of the user.",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user.",
            "format": "uuid"
          },
          "isServicePrincipal": {
            "type": "boolean",
            "description": "Value indicating whether the user is a service principal."
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a response containing user details.",
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.UserLicenseResponse": {
        "type": "object",
        "properties": {
          "accessLevel": {
            "type": "string",
            "description": "The access level of the license. This is only relevant for applications that support access levels. Access levels can be configured in developer.veracity.com.",
            "nullable": true
          },
          "profileId": {
            "type": "string",
            "description": "The globally unique identifier (GUID) for the user (across all tenants)¨.",
            "format": "uuid"
          },
          "isLocked": {
            "type": "boolean",
            "description": "the isLocked is true, the user cannot be removed from the tenant. The user is normally a service principal that comes with one of the applications and is required for the applications to work."
          },
          "accessHubProfileUrl": {
            "type": "string",
            "description": "The url to the member profile page in access hub.",
            "format": "uri",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email of the user.",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user.",
            "format": "uuid"
          },
          "isServicePrincipal": {
            "type": "boolean",
            "description": "Value indicating whether the user is a service principal."
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.UserResponse": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "string",
            "description": "The globally unique identifier (GUID) for the user (across all tenants)¨.",
            "format": "uuid"
          },
          "isLocked": {
            "type": "boolean",
            "description": "the isLocked is true, the user cannot be removed from the tenant. The user is normally a service principal that comes with one of the applications and is required for the applications to work."
          },
          "accessHubProfileUrl": {
            "type": "string",
            "description": "The url to the member profile page in access hub.",
            "format": "uri",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email of the user.",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user.",
            "format": "uuid"
          },
          "isServicePrincipal": {
            "type": "boolean",
            "description": "Value indicating whether the user is a service principal."
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "metadata": {
            "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.Metadata"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.ExtensionProperty"
            },
            "description": "The extension properties of the tenant entity. extension properties are case sensitive and shall user {appPrefix}_{propertyName} format, appPrefixes are defined in developer.veracity.com.",
            "nullable": true
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "readOnly": true
      },
      "Veracity.Core.Api.V4.Responses.UserRoles": {
        "type": "object",
        "properties": {
          "isTenantAdmin": {
            "type": "boolean"
          },
          "isUserAdmin": {
            "type": "boolean"
          },
          "adminOfApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.AdminItem"
            },
            "nullable": true
          },
          "adminOfGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veracity.Core.Api.V4.Responses.AdminItem"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant entity.",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "description": "The ID of the tenant.",
            "format": "uuid"
          },
          "accessHubTenantHomeUrl": {
            "type": "string",
            "description": "get the url to the tenants home page in access hub",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represent the user admin roles within the tenant.",
        "readOnly": true
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://logintest.veracity.com/ed815121-cdfa-4097-b524-e2b23cd36eb6/oauth2/v2.0/authorize",
            "scopes": {
              "https://dnvglb2ctest.onmicrosoft.com/a4a8e726-c1cc-407c-83a0-4ce37f1ce130/user_impersonation": "user_impersonation"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "https://dnvglb2ctest.onmicrosoft.com/a4a8e726-c1cc-407c-83a0-4ce37f1ce130/user_impersonation"
      ]
    }
  ]
}