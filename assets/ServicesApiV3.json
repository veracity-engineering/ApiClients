{
    "swagger": "2.0",
    "info": {
        "version": "V3",
        "title": "Veracity MyServices",
        "description": "<p>The Veracity Services API provides information about the currently logged in user (<code>my</code>) and your application in general (<code>this</code>). \r\nTo call these APIs you need to have an <strong>access token</strong> for the current user as well as a <strong>subscription key</strong>. \r\nThe former can be retrieved once a user authenticates with your application while the latter can be found in the Veracity for Developers resource portal. \r\nHead over to <a href=\\\"https://developer.veracity.com/projects\\\">https://developer.veracity.com/projects</a> and create an Application resource there to create a subscription key for your application. \r\nYou can read more about how to authenticate users from your application in the <a href=\\\"https://developer.veracity.com/docs/section/identity/identity\\\">Identity documentation</a>.</p>\r\n<h2>Grouping</h2>\r\n<p>The API is grouped into 3 distinct sections, each with their own intent.</p>\r\n<ul>\r\n<li><strong>My</strong>: Return information about the currently logged in used as defined by their access token.</li>\r\n<li><strong>This</strong>: Return information about your application.</li>\r\n<li><strong>Options</strong>: These endpoints are for maintenance purposes. Do not use.</li>\r\n</ul>\r\n<p>As the API requires the use of an access token unique to a user many of the endpoints will include information specific to that user. \r\nE.g.: the <code>/my/profile</code> endpoint will return profile information for that user without any additional query parameters as the users is identified by their access token.</p>\r\n<h2>Multiple root urls</h2>\r\n<p>The API is versioned in order to provide a consistent contract for your application to call. You can decide yourself if you want to use one or the other. \r\nThe APIs describe on this page will always be the latest version.</p>\r\n<ul>\r\n<li><code>https://api.veracity.com/veracity/services/v3</code></li>\r\n</ul>\r\n<p>Veracity commits to actively support the latest version of the API as well as the next previous version. This currently means <strong>v3 and v2</strong> of the Veracity Services API.</p>"
    },
    "host": "myapiv3.dnvgl.com",
    "schemes": [
        "https"
    ],
    "paths": {
        "/directory/companies/{id}": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "Get the detailed company description",
                "operationId": "CompaniesDirectory_CompanyById",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CompanyInfo"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/companies/{id}/users": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "Get users affiliated with the company. Paged query: uses 0 based page index",
                "operationId": "CompaniesDirectory_GetUsersByCompany",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/services/{serviceId}/datacontainers": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "Get associated data containers for the service",
                "operationId": "DataContainerService_GetDataContainers",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ItemReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/services/{serviceId}/datacontainers/{id}": {
            "put": {
                "tags": [
                    "Directory"
                ],
                "summary": "",
                "description": "Create a data container reference",
                "operationId": "DataContainerService_CreateDataContainer",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Directory"
                ],
                "description": "Delete a data container reference",
                "operationId": "DataContainerService_DeleteDataContainer",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/my/profile": {
            "get": {
                "tags": [
                    "My"
                ],
                "description": "Retreives the profile of the current logged in user. Note that we will remove the company node from the result in the future",
                "operationId": "My_Info",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MyUserInfo"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/my/picture": {
            "get": {
                "tags": [
                    "My"
                ],
                "description": "Retreives the profile picture of the current logegd in user if one is set, otherwise a 404 is returned",
                "operationId": "My_ProfilePicture",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProfilePicture"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/my/messages/count": {
            "get": {
                "tags": [
                    "My"
                ],
                "description": "Get the current loged in users unread messages count",
                "operationId": "My_GetMessageCount",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "int32",
                            "type": "integer",
                            "x-nullable": false
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/my/messages": {
            "get": {
                "tags": [
                    "My"
                ],
                "description": "Read the users messages. All: include read messages. ImportantOnly: only include important messages",
                "operationId": "My_GetMessagesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "required": true,
                        "type": "boolean",
                        "x-nullable": false
                    },
                    {
                        "name": "importantOnly",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MessageReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "My"
                ],
                "description": "Marks all unread messages as read. ImportantOnly: only mark important messages as read",
                "operationId": "My_MarkAllMessagesAsRead",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "importantOnly",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/my/companies": {
            "get": {
                "tags": [
                    "My"
                ],
                "description": "Get all companies related to the current user",
                "operationId": "My_GetMyCompanies",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/my/policies/{serviceId}/validate()": {
            "get": {
                "tags": [
                    "My"
                ],
                "description": "Validates all myDnvgl policies and returns a list of the policies that needs attention",
                "operationId": "My_ValidatePolicy",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "returnUrl",
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "skipSubscriptionCheck",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/ValidationError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/my/policies/validate()": {
            "get": {
                "tags": [
                    "My"
                ],
                "description": "Validates all myDnvgl policies and returns a list of the policies that needs attention",
                "operationId": "My_ValidatePolicies",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "returnUrl",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/ValidationError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/my/services": {
            "get": {
                "tags": [
                    "My"
                ],
                "description": "Returns all services for the user inside the tenant with id:tenantId. System tenant id is Guid.empty. if tenantId is null, it will return all services from all tenants include system tenant.",
                "operationId": "My_MyServices",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MyServiceReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/my/widgets": {
            "get": {
                "tags": [
                    "My"
                ],
                "description": "Returns all widgets for the user inside the tenant with id:tenantId. System tenant id is Guid.empty. if tenantId is null, it will return all widgets from all tenants include system tenant. Mainly intended to be used by the Veracity Mobile app. ",
                "operationId": "My_GetMyWidgets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Widget"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/Status": {
            "get": {
                "tags": [
                    "Options"
                ],
                "description": "Get the status of the service container.",
                "operationId": "Options_ServiceStatus",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "x-nullable": true
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/cache/invalidate/{id}": {
            "get": {
                "tags": [
                    "Options"
                ],
                "description": "Invalidate the cached item with the provided id",
                "operationId": "Options_InvalidateCache",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/services/{id}": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "Get the detailed service description by the provided id",
                "operationId": "ServicesDirectory_GetServiceById",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServiceInfo"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/services/{id}/users": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "Get the list of users subscribing to the service. Paged query: uses 0 based page index",
                "operationId": "ServicesDirectory_GetUsers",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/services/{serviceId}/administrators/{userId}": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "",
                "operationId": "ServicesDirectory_IsAdmin",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean",
                            "x-nullable": false
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/services/{id}/subscribers": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "",
                "operationId": "ServicesDirectory_GetServiceSubscriptions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "pageNo",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SubscriptionDetails"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/health/status": {
            "get": {
                "tags": [
                    "StatusService"
                ],
                "description": "Returns 200 when all dependencies are ok, 424 if there are some non essential dependency failures and 500 when essential dependencies are unreachable or the service is down",
                "operationId": "StatusService_GetServiceHealthStatus",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HealthStatus"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/services": {
            "get": {
                "tags": [
                    "This"
                ],
                "description": "Get all services the service principal has access to. Currently not 100% accurate. Paged query: uses 0 based page index",
                "operationId": "This_GetServices",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/subscribers": {
            "get": {
                "tags": [
                    "This"
                ],
                "description": "Get all users with a subscription to this service in the tenant if provided, or it will get from system tenant. Paged query: uses 0 based page index .Warning: returns http 300 Ambiguous if service account is linked to multiple services",
                "operationId": "This_GetUsers",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "300": {
                        "description": "Multiple services registered for clientId ",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/subscribers/{userId}": {
            "get": {
                "tags": [
                    "This"
                ],
                "description": "Get all subscriptions to the user in the tenant if provided, or it will get from system tenant.Warning: returns http 300 Ambiguous if service account is linked to multiple services",
                "operationId": "This_GetServiceUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionReference"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "300": {
                        "description": "Multiple services registered for clientId ",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "This"
                ],
                "summary": "",
                "description": "Add a user subscription to the service in the tenant if provided, or it will use system tenant.Warning: returns http 300 Ambiguous if service account is linked to multiple services",
                "operationId": "This_AddUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionOptions"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "300": {
                        "description": "Multiple services registered for clientId ",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "This"
                ],
                "summary": "Warning: returns http 300 Ambiguous if service account is linked to multiple services",
                "description": "Remove servive subscription for the user from this service in the tenant if provided, or it will use system tenant.",
                "operationId": "This_RemoveUser",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "300": {
                        "description": "Multiple services registered for clientId ",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/services/{serviceId}/subscribers/{userId}": {
            "get": {
                "tags": [
                    "This"
                ],
                "description": "Checks if a user has a subscription to the service and the access level if any in the tenant if provided, or it will get from system tenant.",
                "operationId": "This_GetUserForService",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionReference"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "This"
                ],
                "summary": "",
                "description": "Add a user subscription to the service with the provided id in the tenant if provided, or it will use system tenant. Only available for the root service for nested services",
                "operationId": "This_AddServiceUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionOptions"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "This"
                ],
                "description": "Remove servive subscription from the user in the tenant if provided, or it will use system tenant. Only available for the root service for nested services",
                "operationId": "This_RemoveServiceUser",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "suppressNotification",
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/services/{serviceId}/subscribers/{userId}/picture": {
            "get": {
                "tags": [
                    "This"
                ],
                "description": "Gets the profile picture of the user if there is a subscription and the user has uploaded a profile picture to veracity",
                "operationId": "This_GetUserProfilePicture",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProfilePicture"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/services/{serviceId}/subscribers": {
            "get": {
                "tags": [
                    "This"
                ],
                "description": "Get all users with a subscription to this service in the tenant if provided, or it will get from system tenant. Paged query: uses 0 based page index",
                "operationId": "This_GetUsersForService",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/user/resolve({email})": {
            "get": {
                "tags": [
                    "This"
                ],
                "description": "Get the user id from the email address. Note that an email address may be connected to more than one user account",
                "operationId": "This_ResolveUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/user": {
            "post": {
                "tags": [
                    "This"
                ],
                "summary": "",
                "description": "Create a user in Veracity",
                "operationId": "This_CreateUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserRegistration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserCreationReference"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/users": {
            "post": {
                "tags": [
                    "This"
                ],
                "summary": "",
                "description": "Create a users in Veracity",
                "operationId": "This_CreateUsers",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserRegistration"
                            },
                            "x-nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserCreationReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/services/{serviceId}/notification": {
            "post": {
                "tags": [
                    "This"
                ],
                "summary": "",
                "description": "Send notification to your users through the Veracity notification service",
                "operationId": "This_NotifyUsers",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NotificationMessage"
                        }
                    },
                    {
                        "name": "channelId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/this/services/{serviceId}/subscribers/{userId}/policy/validate()": {
            "get": {
                "tags": [
                    "This"
                ],
                "description": "",
                "operationId": "This_VerifySubscriberPolicy",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "returnUrl",
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "skipSubscriptionCheck",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/ValidationError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/by/email": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "Gets a list of users with a given email address",
                "operationId": "UsersDirectory_GetUsersByEmail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/{userid}": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "Returns the full profile for the user with the provided id",
                "operationId": "UsersDirectory_GetUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userid",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserInfo"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Directory"
                ],
                "summary": "Only to be used by DNV GL Maritime",
                "description": "Delete user",
                "operationId": "UsersDirectory_DeleteUser",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "userid",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Read multiple users profile",
                "description": "Get full user profiles for a list of userid's",
                "operationId": "UsersDirectory_GetUsersIn",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "x-nullable": true
                            },
                            "x-nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserInfo"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/{userid}/companies": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "Returns a list of companies tied to a spescified user.",
                "operationId": "UsersDirectory_GetUserCompanies",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userid",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/{userid}/services": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "Get a list of the users servcies in the tenant if provided, or it will use system tenant. Paged query: uses 0 based page index",
                "operationId": "UsersDirectory_GetUserServices",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userid",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceReference"
                            },
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/{userid}/services/{serviceId}": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "description": "Gets the subscription state for a user with respect to the service provided in the tenant if provided, or it will use system tenant.",
                "operationId": "UsersDirectory_GetUserSubscriptionDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userid",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionDetails"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/me/edit": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Not for common use",
                "description": "Update the profile for the logged in user. This cannot be used to edit a random user, you need to have a valid user token",
                "operationId": "UsersDirectory_UpdateCurrentUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserInfoUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/me/change/password": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Not for common use",
                "description": "Changes the password for the logged in user.",
                "operationId": "UsersDirectory_UpdateCurrentUsersPassword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/me/change/{type}": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Not for common use",
                "description": "change and validate phone or email. The type parameter can be email or phone",
                "operationId": "UsersDirectory_UpdateCurrentUsersEmailOrPhone",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeAddressRequest"
                        }
                    },
                    {
                        "name": "authToken",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "x-nullable": true
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/me/activate": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Not for common use",
                "description": "Activates a user by providing the activation token obtained in 'me/exchange/otp'",
                "operationId": "UsersDirectory_ActivateUserAccount",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActivationRequest"
                        }
                    },
                    {
                        "name": "authToken",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/me/pending/activation": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "summary": "Not for common use",
                "description": "Get the data currently registered on the new user",
                "operationId": "UsersDirectory_GetPendingUserActivation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "authToken",
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "emailAddress",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserInfo"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/me/exchange/otp": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Not for common use",
                "description": "Exchange the otp code with an activation token",
                "operationId": "UsersDirectory_ExchangeOtpCode",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "otpAuthCode",
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "emailAddress",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TokenWrapper"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/me/change/{type}/verify": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Not for common use",
                "description": "Verify that the user is the rightfull owner of the email/phone. The type parameter can be email or phone",
                "operationId": "UsersDirectory_ValidateEmailOrPhone",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfirmationRequest"
                        }
                    },
                    {
                        "name": "authToken",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/me/accept/terms": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Not for common use",
                "description": "Accept the service and platform terms on behalf of the logged in user",
                "operationId": "UsersDirectory_AcceptTerms",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AcceptPlatformTermsRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/{userId}/change/email": {
            "post": {
                "tags": [
                    "Directory"
                ],
                "summary": "Only to be used by DNV GL Maritime",
                "description": "Change email address for a user",
                "operationId": "UsersDirectory_UpdateUserEmail",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "/directory/users/{userId}/resync/all": {
            "get": {
                "tags": [
                    "Directory"
                ],
                "summary": "Internal service for syncing company and services for a user",
                "description": "Change email address for a users in the tenant if provided, or it will use system tenant",
                "operationId": "UsersDirectory_GetUserResyncData",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "x-nullable": true
                    },
                    {
                        "name": "tenantId",
                        "in": "header",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserReferences"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/AuthError"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Dependency call failure",
                        "schema": {
                            "$ref": "#/definitions/ErrorDetail"
                        },
                        "headers": {
                            "x-supportCode": {
                                "description": "correlation token for log lookup.",
                                "type": "string"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "openid",
                            "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation"
                        ]
                    }
                ]
            },
            "parameters": [
                {
                    "name": "x-supportCode",
                    "in": "header",
                    "description": "Provide a correlation token for log lookup. This is optional.",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "Ocp-Apim-Subscription-Key",
                    "in": "header",
                    "description": "Veracity api management subscription key",
                    "required": false,
                    "type": "string"
                }
            ]
        }
    },
    "definitions": {
        "CompanyInfo": {
            "required": [
                "#employee",
                "#requests"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "url": {
                    "type": "string",
                    "x-nullable": true
                },
                "usersUrl": {
                    "type": "string",
                    "x-nullable": true
                },
                "addressLines": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "city": {
                    "type": "string",
                    "x-nullable": true
                },
                "country": {
                    "type": "string",
                    "x-nullable": true
                },
                "customerId": {
                    "type": "string",
                    "x-nullable": true
                },
                "countryCode": {
                    "type": "string",
                    "x-nullable": true
                },
                "zipCode": {
                    "type": "string",
                    "x-nullable": true
                },
                "#employee": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "domains": {
                    "type": "string",
                    "x-nullable": true
                },
                "email": {
                    "type": "string",
                    "x-nullable": true
                },
                "#requests": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "internalId": {
                    "type": "string",
                    "x-nullable": true
                },
                "vat": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "UserReference": {
            "description": "Contians the name, id and relative uri to the resource detilas",
            "required": [
                "activated"
            ],
            "type": "object",
            "properties": {
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "email": {
                    "type": "string",
                    "x-nullable": true
                },
                "activated": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "tenantId": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "ItemReference": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                },
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "MyUserInfo": {
            "required": [
                "#companies",
                "verifiedEmail",
                "verifiedPhone",
                "managedAccount",
                "activated",
                "accessHubEnabled"
            ],
            "type": "object",
            "properties": {
                "profilePageUrl": {
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "messagesUrl": {
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "identity": {
                    "type": "string",
                    "x-nullable": true
                },
                "servicesUrl": {
                    "description": "Gets the relative url to the users service lits",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "companiesUrl": {
                    "description": "Gets the relative url to the users companies lits",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "name": {
                    "description": "Contains the users formatted name: {lastName}, {firstName}. the id token contains the discrete values in the givenName and surname claims.",
                    "type": "string",
                    "x-nullable": true
                },
                "email": {
                    "description": "The users registered email address. if verifiedEmail is true this can be used to contact the user.",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "#companies": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "verifiedEmail": {
                    "description": "true if email is verified by the user; otherwise, false.",
                    "type": "boolean",
                    "x-nullable": false
                },
                "language": {
                    "description": "Contains the perfered language for the user. If your service support multi-language use this. [Deprecated]",
                    "type": "string",
                    "x-nullable": true
                },
                "phone": {
                    "type": "string",
                    "x-nullable": true
                },
                "verifiedPhone": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "firstName": {
                    "type": "string",
                    "x-nullable": true
                },
                "lastName": {
                    "type": "string",
                    "x-nullable": true
                },
                "countryCode": {
                    "type": "string",
                    "x-nullable": true
                },
                "managedAccount": {
                    "description": "Indicates if the account is managed by direct integration with the customer's domain",
                    "type": "boolean",
                    "x-nullable": false
                },
                "activated": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "accessHubEnabled": {
                    "type": "boolean",
                    "x-nullable": false
                }
            },
            "x-nullable": true
        },
        "ProfilePicture": {
            "type": "object",
            "properties": {
                "Image": {
                    "format": "byte",
                    "type": "string",
                    "x-nullable": true
                },
                "MimeType": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "MessageReference": {
            "description": "Contians the name, id and relative uri to the resource detilas",
            "required": [
                "deliverTime",
                "important"
            ],
            "type": "object",
            "properties": {
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "deliverTime": {
                    "format": "date-time",
                    "description": "The deliver time in utc",
                    "type": "string",
                    "x-nullable": false
                },
                "from": {
                    "type": "string",
                    "x-nullable": true
                },
                "important": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "CompanyReference": {
            "description": "Contians the name, id and relative uri to the resource detilas",
            "type": "object",
            "properties": {
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "MyServiceReference": {
            "required": [
                "ProductionService"
            ],
            "type": "object",
            "properties": {
                "serviceUrl": {
                    "description": "the location of the application.",
                    "type": "string",
                    "x-nullable": true
                },
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "ProductionService": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "Widget": {
            "required": [
                "id",
                "width",
                "height",
                "priority",
                "showTitle",
                "supportsMobile",
                "serviceId",
                "sequenceNo",
                "openInNewTab"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "x-nullable": false
                },
                "url": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "width": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "height": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "priority": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                },
                "logoUrl": {
                    "type": "string",
                    "x-nullable": true
                },
                "pictogramUrl": {
                    "type": "string",
                    "x-nullable": true
                },
                "type": {
                    "type": "string",
                    "x-nullable": true
                },
                "showTitle": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "supportsMobile": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "serviceId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "x-nullable": false
                },
                "sequenceNo": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "color": {
                    "type": "string",
                    "x-nullable": true
                },
                "openInNewTab": {
                    "type": "boolean",
                    "x-nullable": false
                }
            },
            "x-nullable": true
        },
        "ServiceInfo": {
            "required": [
                "public",
                "inherited",
                "selfSubscribe"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "shortDescription": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                },
                "apiAudience": {
                    "type": "string",
                    "x-nullable": true
                },
                "category": {
                    "type": "string",
                    "x-nullable": true
                },
                "public": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "tenantId": {
                    "type": "string",
                    "x-nullable": true
                },
                "PricingTier": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "inherited": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "selfSubscribe": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "serviceOwner": {
                    "type": "string",
                    "x-nullable": true
                },
                "termsOfUse": {
                    "type": "string",
                    "x-nullable": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "parentUrl": {
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "parentId": {
                    "type": "string",
                    "x-nullable": true
                },
                "childrenUrl": {
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "servicerUrl": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "SubscriptionDetails": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/definitions/ServiceReference"
                },
                "user": {
                    "$ref": "#/definitions/UserReference"
                },
                "role": {
                    "$ref": "#/definitions/RoleReference"
                },
                "subscriptionState": {
                    "$ref": "#/definitions/SubscriptionState"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "x-nullable": true
                },
                "pricingTier": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "ServiceReference": {
            "description": "Contians the name, id and relative uri to the resource detilas",
            "required": [
                "ProductionService"
            ],
            "type": "object",
            "properties": {
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "ProductionService": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "RoleReference": {
            "description": "Contians the name, id and relative uri to the resource detilas",
            "type": "object",
            "properties": {
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "type": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "SubscriptionState": {
            "description": "The state of the subscription",
            "required": [
                "state"
            ],
            "type": "object",
            "properties": {
                "state": {
                    "description": "Subscription state",
                    "enum": [
                        "subscribing",
                        "pending",
                        "rejected",
                        "notSubscribing",
                        "null",
                        "error"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "SubscriptionStateTypes",
                        "modelAsString": false
                    },
                    "x-nullable": false
                }
            },
            "x-nullable": true
        },
        "HealthStatus": {
            "required": [
                "status",
                "subCode"
            ],
            "type": "object",
            "properties": {
                "checks": {
                    "description": "List of dependencies probed. Like database connections and such",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DependencyState"
                    },
                    "x-nullable": true
                },
                "status": {
                    "description": " status: (required) indicates whether the service status is acceptable\r\nor not.API publishers SHOULD use following values for the field:\r\n            \r\n            \r\no  \"pass\": healthy (acceptable aliases: \"ok\" to support Node's\r\n            \r\nTerminus and \"up\" for Java's SpringBoot),\r\n            \r\n            \r\no  \"fail\": unhealthy (acceptable aliases: \"error\" to support Node's\r\n            \r\nTerminus and \"down\" for Java's SpringBoot), and\r\n            \r\n            \r\n    o  \"warn\": healthy, with some concerns.\r\n            \r\n    The value of the status field is case-insensitive and is tightly\r\n    related with the HTTP response code returned by the health endpoint.\r\n            \r\n    For \"pass\" status, HTTP response code in the 2xx-3xx range MUST be\r\n            \r\nused.For \"fail\" status, HTTP response code in the 4xx-5xx range\r\n            \r\nMUST be used.In case of the \"warn\" status, endpoints MUST return\r\n            \r\nHTTP status in the 2xx-3xx range, and additional information SHOULD\r\n            \r\n    be provided, utilizing optional fields of the response.\r\n            \r\n            \r\n    A health endpoint is only meaningful in the context of the component\r\n    it indicates the health of.  It has no other meaning or purpose.As\r\nsuch, its health is a conduit to the health of the component.\r\n            \r\n    Clients SHOULD assume that the HTTP response code returned by the\r\nhealth endpoint is applicable to the entire component (e.g.a larger\r\n            \r\n    API or a microservice).  This is compatible with the behavior that\r\n    current infrastructural tooling expects: load-balancers, service\r\n    discoveries and others, utilizing health-checks.",
                    "enum": [
                        "pass",
                        "warn",
                        "fail"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "HealthStateTypes",
                        "modelAsString": false
                    },
                    "x-nullable": false
                },
                "serviceId": {
                    "description": "serviceId: (required) identifies the service. Use ids like: identityApi, V3 or any other commonly used names for the service in question.",
                    "type": "string",
                    "x-nullable": true
                },
                "releaseId": {
                    "description": " releaseId: (optional) in well-designed APIs, backwards-compatible\r\nchanges in the service should not update a version number.APIs\r\n\r\nusually change their version number as infrequently as possible, to\r\npreserve stable interface.  However, implementation of an API may\r\n    change much more frequently, which leads to the importance of having\r\n    separate \"release number\" or \"releaseId\" that is different from the\r\npublic version of the API.",
                    "type": "string",
                    "x-nullable": true
                },
                "version": {
                    "description": "version: (optional) public version of the service.",
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "description": " description (optional) is a human-friendly description of the\r\nservice.",
                    "type": "string",
                    "x-nullable": true
                },
                "notes": {
                    "description": "notes: (optional) array of notes relevant to current state of health",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "output": {
                    "description": "output: (optional) raw error output, in case of \"fail\" or \"warn\"\r\nstates.This field SHOULD be omitted for \"pass\" state.",
                    "type": "string",
                    "x-nullable": true
                },
                "message": {
                    "type": "string",
                    "x-nullable": true
                },
                "information": {
                    "type": "string",
                    "x-nullable": true
                },
                "subCode": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "supportCode": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "DependencyState": {
            "required": [
                "status",
                "weight",
                "critical"
            ],
            "type": "object",
            "properties": {
                "componentId": {
                    "description": "componentId: (optional) is a unique identifier of an instance of a\r\n specific sub-component/dependency of a service.Multiple objects\r\n  with the same componentID MAY appear in the details, if they are from\r\n  different nodes. Use well know references to 1st party veracity components like \"v3\" if you are probing the V3 connection.",
                    "type": "string",
                    "x-nullable": true
                },
                "componentType": {
                    "description": " componentType: (optional) SHOULD be present if componentName is\r\npresent.It's a type of the component and could be one of:\r\n\r\no Pre-defined value from this spec.Pre-defined values include:\r\n\r\n*  component\r\n\r\n    * datastore\r\n\r\n*  system\r\n\r\n    o  A common and standard term from a well-known source such as\r\n\r\nschema.org, IANA or microformats.\r\n\r\n    o A URI that indicates extra semantics and processing rules that MAY\r\n\r\nbe provided by a resource at the other end of the URI.  URIs do\r\n\r\nnot have to be dereferenceable, however.They are just a\r\nnamespace, and the meaning of a namespace CAN be provided by any\r\n    convenient means(e.g.publishing an RFC, Swagger document or a\r\nnicely printed book).",
                    "type": "string",
                    "x-nullable": true
                },
                "observedValue": {
                    "description": "observedValue: (optional) could be any valid JSON value, such as:\r\nstring, number, object, array or literal.",
                    "type": "object",
                    "x-nullable": true
                },
                "observedUnit": {
                    "description": "observedUnit (optional) SHOULD be present if observedValue is\r\npresent.Clarifies the unit of measurement in which observedUnit is\r\nreported, e.g. for a time-based value it is important to know whether\r\nthe time is reported in seconds, minutes, hours or something else.\r\nTo make sure unit is denoted by a well-understood name or an\r\nabbreviation, it SHOULD be one of:\r\n\r\n- A common and standard term from a well-known source such as\r\nschema.org, IANA, microformats, or a standards document such as\r\n[RFC3339].\r\n\r\n- A URI that indicates extra semantics and processing rules that MAY\r\nbe provided by a resource at the other end of the URI.URIs do\r\nnot have to be dereferenceable, however.They are just a\r\nnamespace, and the meaning of a namespace CAN be provided by any\r\n    convenient means(e.g.publishing an RFC, Swagger document or a\r\nnicely printed book).",
                    "type": "string",
                    "x-nullable": true
                },
                "status": {
                    "description": "status (optional) has the exact same meaning as the top-level\r\n\"output\" element, but for the sub-component/downstream dependency\r\nrepresented by the details object.",
                    "enum": [
                        "pass",
                        "warn",
                        "fail"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "HealthStateTypes",
                        "modelAsString": false
                    },
                    "x-nullable": false
                },
                "affectedEndpoints": {
                    "description": "affectedEndpoints (optional) is a JSON array containing URI Templates\r\nas defined by[RFC6570].  This field SHOULD be omitted if the\r\n\"status\" field is present and has value equal to \"pass\".  A typical\r\nAPI has many URI endpoints.Most of the time we are interested in\r\nthe overall health of the API, without diving into details.That\r\n    said, sometimes operational and resilience middleware needs to know\r\n    more details about the health of the API(which is why \"checks\"\r\nproperty provides details).  In such cases, we often need to indicate\r\n    which particular endpoints are affected by a particular check's\r\ntroubles vs.other endpoints that may be fine.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "time": {
                    "format": "date-time",
                    "description": "time (optional) is the date-time, in ISO8601 format, at which the\r\nreading of the observedValue was recorded.This assumes that the\r\n   value can be cached and the reading typically doesn't happen in real\r\n            \r\n   time, for performance and scalability purposes.",
                    "type": "string",
                    "x-nullable": true
                },
                "output": {
                    "description": "output (optional) has the exact same meaning as the top-level\r\n\"output\" element, but for the sub-component/downstream dependency\r\nrepresented by the details object.  As is the case for the top-level\r\n    element, this field SHOULD be omitted for \"pass\" state of a\r\n    downstream dependency.",
                    "type": "string",
                    "x-nullable": true
                },
                "weight": {
                    "format": "int32",
                    "description": "A numeric value (1,2 or 3) to represent the weighting of the dependency in the overall sla calculation",
                    "type": "integer",
                    "x-nullable": false
                },
                "critical": {
                    "type": "boolean",
                    "x-nullable": false
                }
            },
            "x-nullable": true
        },
        "SubscriptionReference": {
            "required": [
                "activated"
            ],
            "type": "object",
            "properties": {
                "state": {
                    "type": "string",
                    "x-nullable": true
                },
                "role": {
                    "type": "string",
                    "x-nullable": true
                },
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "email": {
                    "type": "string",
                    "x-nullable": true
                },
                "activated": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "tenantId": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "SubscriptionOptions": {
            "type": "object",
            "properties": {
                "role": {
                    "description": "Optional, only applicable if you have access levels configured for your service",
                    "type": "string",
                    "x-nullable": true
                },
                "overrideNotificationSettings": {
                    "description": "Optional, only to use if you need to override the service configuration",
                    "enum": [
                        "send",
                        "suppress",
                        "none"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "OverrideTypes",
                        "modelAsString": false
                    },
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "UserRegistration": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string",
                    "x-nullable": true
                },
                "lastName": {
                    "type": "string",
                    "x-nullable": true
                },
                "email": {
                    "type": "string",
                    "x-nullable": true
                },
                "phone": {
                    "type": "string",
                    "x-nullable": true
                },
                "countryCode": {
                    "type": "string",
                    "x-nullable": true
                },
                "options": {
                    "$ref": "#/definitions/RegistrationOptions",
                    "description": "Specify additional creation controll oprions, this is not mandatory"
                }
            },
            "x-nullable": true
        },
        "RegistrationOptions": {
            "type": "object",
            "properties": {
                "sendMail": {
                    "description": "Set this to false to take responsibillity of sending the registration email to the user. Default: true",
                    "type": "boolean",
                    "x-nullable": true
                },
                "createSubscription": {
                    "description": "Make the service create a default subscription for the newly created user",
                    "type": "boolean",
                    "x-nullable": true
                },
                "serviceId": {
                    "description": "The service id to create subscription for",
                    "type": "string",
                    "x-nullable": true
                },
                "role": {
                    "description": "Specify the accessLevel/role the user should have with the new subscription. Optional",
                    "type": "string",
                    "x-nullable": true
                },
                "subscriptions": {
                    "description": "Add multiple subscriptions during user creation. Note: If this is used the serviceId and role properties will not be evaluated",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubscriptionRequest"
                    },
                    "x-nullable": true
                },
                "returnUrl": {
                    "description": "Specify the location to send the newly created user to after the registration process is completed",
                    "type": "string",
                    "x-nullable": true
                },
                "contactEmail": {
                    "description": "The email address of the user or service that creates the new user account",
                    "type": "string",
                    "x-nullable": true
                },
                "contactName": {
                    "description": "The Name of the user or service that creates the new user account",
                    "type": "string",
                    "x-nullable": true
                },
                "activationType": {
                    "description": "Only for mobile app usage. Default is emailLink",
                    "enum": [
                        "emailLink",
                        "otp"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "ActivationTypes",
                        "modelAsString": false
                    },
                    "x-nullable": true
                },
                "userCreationOptions": {
                    "enum": [
                        "all",
                        "onlyInvited",
                        "onlyNew"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "UserCreationOptionTypes",
                        "modelAsString": false
                    },
                    "x-nullable": true
                },
                "inviteMessage": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "SubscriptionRequest": {
            "type": "object",
            "properties": {
                "serviceId": {
                    "description": "Mandatory, The service id to create the subscription for",
                    "type": "string",
                    "x-nullable": true
                },
                "role": {
                    "description": "Optional, the access level",
                    "type": "string",
                    "x-nullable": true
                },
                "sku": {
                    "description": "Optional, define the sku if applicable",
                    "type": "string",
                    "x-nullable": true
                },
                "overrideNotificationSettings": {
                    "description": "Optional, only to use if you need to override the service configuration",
                    "enum": [
                        "send",
                        "suppress",
                        "none"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "OverrideTypes",
                        "modelAsString": false
                    },
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "UserCreationReference": {
            "description": "Contians the name, id and relative uri to the resource detilas",
            "required": [
                "activated"
            ],
            "type": "object",
            "properties": {
                "confirmationUrl": {
                    "description": "The url to include in the email sent to the user to complete the registration process. Only contains a value if the sendEmail flag is false.",
                    "type": "string",
                    "x-nullable": true
                },
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "email": {
                    "type": "string",
                    "x-nullable": true
                },
                "activated": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "tenantId": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "AdminReference": {
            "description": "Contians the name, id and relative uri to the resource detilas",
            "required": [
                "activated"
            ],
            "type": "object",
            "properties": {
                "accessLevelUrl": {
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "serviceId": {
                    "type": "string",
                    "x-nullable": true
                },
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "email": {
                    "type": "string",
                    "x-nullable": true
                },
                "activated": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "tenantId": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "AdminInfo": {
            "required": [
                "#companies",
                "verifiedEmail",
                "verifiedPhone",
                "managedAccount",
                "activated",
                "accessHubEnabled"
            ],
            "type": "object",
            "properties": {
                "roles": {
                    "description": "Contains the administrator roles a user has for a given resource.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleReference"
                    },
                    "x-nullable": true
                },
                "name": {
                    "description": "Contains the users formatted name: {lastName}, {firstName}. the id token contains the discrete values in the givenName and surname claims.",
                    "type": "string",
                    "x-nullable": true
                },
                "email": {
                    "description": "The users registered email address. if verifiedEmail is true this can be used to contact the user.",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "#companies": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "verifiedEmail": {
                    "description": "true if email is verified by the user; otherwise, false.",
                    "type": "boolean",
                    "x-nullable": false
                },
                "language": {
                    "description": "Contains the perfered language for the user. If your service support multi-language use this. [Deprecated]",
                    "type": "string",
                    "x-nullable": true
                },
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "x-nullable": true
                },
                "phone": {
                    "type": "string",
                    "x-nullable": true
                },
                "verifiedPhone": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "servicesUrl": {
                    "description": "Gets the relative url to the users service lits",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "companiesUrl": {
                    "description": "Gets the relative url to the users companies lits",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "firstName": {
                    "type": "string",
                    "x-nullable": true
                },
                "lastName": {
                    "type": "string",
                    "x-nullable": true
                },
                "countryCode": {
                    "type": "string",
                    "x-nullable": true
                },
                "managedAccount": {
                    "description": "Indicates if the account is managed by direct integration with the customer's domain",
                    "type": "boolean",
                    "x-nullable": false
                },
                "activated": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "accessHubEnabled": {
                    "type": "boolean",
                    "x-nullable": false
                }
            },
            "x-nullable": true
        },
        "NotificationMessage": {
            "required": [
                "HighPriority"
            ],
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/definitions/Message"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "HighPriority": {
                    "type": "boolean",
                    "x-nullable": false
                }
            },
            "x-nullable": true
        },
        "Message": {
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "content": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "timeStamp": {
                    "type": "string",
                    "x-nullable": true
                },
                "channelId": {
                    "type": "string",
                    "x-nullable": true
                },
                "type": {
                    "format": "int32",
                    "description": "Use 1 for Veracity notification center and 3 for email.",
                    "type": "integer",
                    "x-nullable": false
                }
            },
            "x-nullable": true
        },
        "UserInfo": {
            "required": [
                "#companies",
                "verifiedEmail",
                "verifiedPhone",
                "managedAccount",
                "activated",
                "accessHubEnabled"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "description": "Contains the users formatted name: {lastName}, {firstName}. the id token contains the discrete values in the givenName and surname claims.",
                    "type": "string",
                    "x-nullable": true
                },
                "email": {
                    "description": "The users registered email address. if verifiedEmail is true this can be used to contact the user.",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "x-nullable": true
                },
                "#companies": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "verifiedEmail": {
                    "description": "true if email is verified by the user; otherwise, false.",
                    "type": "boolean",
                    "x-nullable": false
                },
                "language": {
                    "description": "Contains the perfered language for the user. If your service support multi-language use this. [Deprecated]",
                    "type": "string",
                    "x-nullable": true
                },
                "identity": {
                    "description": "The relative path to the resource details",
                    "type": "string",
                    "x-nullable": true
                },
                "phone": {
                    "type": "string",
                    "x-nullable": true
                },
                "verifiedPhone": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "servicesUrl": {
                    "description": "Gets the relative url to the users service lits",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "companiesUrl": {
                    "description": "Gets the relative url to the users companies lits",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "firstName": {
                    "type": "string",
                    "x-nullable": true
                },
                "lastName": {
                    "type": "string",
                    "x-nullable": true
                },
                "countryCode": {
                    "type": "string",
                    "x-nullable": true
                },
                "managedAccount": {
                    "description": "Indicates if the account is managed by direct integration with the customer's domain",
                    "type": "boolean",
                    "x-nullable": false
                },
                "activated": {
                    "type": "boolean",
                    "x-nullable": false
                },
                "accessHubEnabled": {
                    "type": "boolean",
                    "x-nullable": false
                }
            },
            "x-nullable": true
        },
        "UserInfoUpdate": {
            "type": "object",
            "properties": {
                "firstName": {
                    "description": "The firstname",
                    "type": "string",
                    "x-nullable": true
                },
                "lastName": {
                    "description": "The lastname",
                    "type": "string",
                    "x-nullable": true
                },
                "displayName": {
                    "description": "Optional, if left empty lastName, firstName is used",
                    "type": "string",
                    "x-nullable": true
                },
                "countryCode": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "ChangePasswordRequest": {
            "type": "object",
            "properties": {
                "oldPassword": {
                    "type": "string",
                    "x-nullable": true
                },
                "newPassword": {
                    "type": "string",
                    "x-nullable": true
                },
                "newPasswordRepeat": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "ChangeAddressRequest": {
            "type": "object",
            "properties": {
                "oldAddress": {
                    "type": "string",
                    "x-nullable": true
                },
                "newAddress": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "ActivationRequest": {
            "description": "",
            "required": [
                "acceptPlatformTerms",
                "acceptServiceTerms"
            ],
            "type": "object",
            "properties": {
                "password": {
                    "description": "The password to set on the user account",
                    "type": "string",
                    "x-nullable": true
                },
                "passwordRepeat": {
                    "description": "Repeat the password",
                    "type": "string",
                    "x-nullable": true
                },
                "userId": {
                    "description": "The Veracity User Id",
                    "type": "string",
                    "x-nullable": true
                },
                "userDetails": {
                    "$ref": "#/definitions/UserInfoUpdate",
                    "description": "Confirm the user details"
                },
                "email": {
                    "description": "the users email address. This is just used for validation, editing this will not change the email address of the user.",
                    "type": "string",
                    "x-nullable": true
                },
                "acceptPlatformTerms": {
                    "description": "Platform terms accepted",
                    "type": "boolean",
                    "x-nullable": false
                },
                "acceptServiceTerms": {
                    "description": "Service terms accepted",
                    "type": "boolean",
                    "x-nullable": false
                },
                "serviceId": {
                    "description": "The service id of the service terms",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "TokenWrapper": {
            "required": [
                "expiry",
                "issued"
            ],
            "type": "object",
            "properties": {
                "expiry": {
                    "format": "int64",
                    "description": "The expiry time of the issued token in unix epoch",
                    "type": "integer",
                    "x-nullable": false
                },
                "issued": {
                    "format": "int64",
                    "description": "The issued time of the token in unix epoch",
                    "type": "integer",
                    "x-nullable": false
                },
                "authToken": {
                    "description": "The auth token to be included in 'me/pending/activation' and 'me/activate'",
                    "type": "string",
                    "x-nullable": true
                },
                "issuedBy": {
                    "description": "A unique string representing the issuer of the token",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "ConfirmationRequest": {
            "type": "object",
            "properties": {
                "activationCode": {
                    "type": "string",
                    "x-nullable": true
                },
                "address": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "AcceptPlatformTermsRequest": {
            "description": "Accept platform or service terms",
            "required": [
                "acceptPlatformTerms",
                "acceptServiceTerms"
            ],
            "type": "object",
            "properties": {
                "acceptPlatformTerms": {
                    "description": "Platform terms accepted",
                    "type": "boolean",
                    "x-nullable": false
                },
                "acceptServiceTerms": {
                    "description": "Service terms accepted",
                    "type": "boolean",
                    "x-nullable": false
                },
                "serviceId": {
                    "description": "The service id of the service terms",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "UserReferences": {
            "type": "object",
            "properties": {
                "UserCompanies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanyReference"
                    },
                    "x-nullable": true
                },
                "AdminForCompanies": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "Services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceReference"
                    },
                    "x-nullable": true
                },
                "Subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubscriptionDetails"
                    },
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "ErrorDetail": {
            "required": [
                "subCode"
            ],
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "x-nullable": true
                },
                "information": {
                    "type": "string",
                    "x-nullable": true
                },
                "subCode": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "supportCode": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "AuthError": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "ValidationError": {
            "required": [
                "subCode"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "x-nullable": true
                },
                "violatedPolicies": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "SubscriptionMissing": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "message": {
                    "type": "string",
                    "x-nullable": true
                },
                "information": {
                    "type": "string",
                    "x-nullable": true
                },
                "subCode": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "supportCode": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        }
    },
    "securityDefinitions": {
        "oauth2": {
            "type": "oauth2",
            "description": "OAuth2 Implicit Grant",
            "flow": "implicit",
            "authorizationUrl": "https://longin.veracity.com//a68572e3-63ce-4bc1-acdc-b64943502e9d/B2C_1A_SignInWithADFSIdp/oauth2/v2.0/authorize",
            "scopes": {
                "openid": "performs sign-in",
                "offline_access": "Give the app access to resources on behalf of the user for an extended time",
                "https://dnvglb2cprod.onmicrosoft.com/83054ebf-1d7b-43f5-82ad-b2bde84d7b75/user_impersonation": "Allow the service to act on behalf of the user"
            }
        }
    }
}