// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DNV.ApiClients.Veracity.Identity.ServicesApi
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for CompaniesDirectory.
    /// </summary>
    public static partial class CompaniesDirectoryExtensions
    {
            /// <summary>
            /// CompaniesDirectory_CompanyById
            /// </summary>
            /// <remarks>
            /// Get the detailed company description
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='xSupportCode'>
            /// Provide a correlation token for log lookup. This is optional.
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// Veracity api management subscription key
            /// </param>
            public static object CompanyById(this ICompaniesDirectory operations, string id, string xSupportCode = default, string ocpApimSubscriptionKey = default)
            {
                return operations.CompanyByIdAsync(id, xSupportCode, ocpApimSubscriptionKey).GetAwaiter().GetResult();
            }

            /// <summary>
            /// CompaniesDirectory_CompanyById
            /// </summary>
            /// <remarks>
            /// Get the detailed company description
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='xSupportCode'>
            /// Provide a correlation token for log lookup. This is optional.
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// Veracity api management subscription key
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CompanyByIdAsync(this ICompaniesDirectory operations, string id, string xSupportCode = default, string ocpApimSubscriptionKey = default, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.CompanyByIdWithHttpMessagesAsync(id, xSupportCode, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// CompaniesDirectory_GetUsersByCompany
            /// </summary>
            /// <remarks>
            /// Get users affiliated with the company. Paged query: uses 0 based page index
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='page'>
            /// Format - int32.
            /// </param>
            /// <param name='pageSize'>
            /// Format - int32.
            /// </param>
            /// <param name='xSupportCode'>
            /// Provide a correlation token for log lookup. This is optional.
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// Veracity api management subscription key
            /// </param>
            public static object GetUsersByCompany(this ICompaniesDirectory operations, string id, int page, int pageSize, string xSupportCode = default, string ocpApimSubscriptionKey = default)
            {
                return operations.GetUsersByCompanyAsync(id, page, pageSize, xSupportCode, ocpApimSubscriptionKey).GetAwaiter().GetResult();
            }

            /// <summary>
            /// CompaniesDirectory_GetUsersByCompany
            /// </summary>
            /// <remarks>
            /// Get users affiliated with the company. Paged query: uses 0 based page index
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='page'>
            /// Format - int32.
            /// </param>
            /// <param name='pageSize'>
            /// Format - int32.
            /// </param>
            /// <param name='xSupportCode'>
            /// Provide a correlation token for log lookup. This is optional.
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// Veracity api management subscription key
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetUsersByCompanyAsync(this ICompaniesDirectory operations, string id, int page, int pageSize, string xSupportCode = default, string ocpApimSubscriptionKey = default, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.GetUsersByCompanyWithHttpMessagesAsync(id, page, pageSize, xSupportCode, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
