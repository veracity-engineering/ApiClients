// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.Identity.PlatformApiV4.Models
{
    using Newtonsoft.Json;
    public partial class CapabilityRequest
    {
        /// <summary>
        /// Initializes a new instance of the CapabilityRequest class.
        /// </summary>
        public CapabilityRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CapabilityRequest class.
        /// </summary>
        /// <param name="hasAccessLevel">Determines if the capability can have
        /// additional rights associated with it. If true, the capability is
        /// visible in access hub and is part of ACL.</param>
        /// <param name="capacityUnit">This is usually used to tell the
        /// application what the unit of measure is for the capacity. Eg
        /// gigabytes, number of sub-elements, etc.</param>
        public CapabilityRequest(string name = default, bool? hasAccessLevel = default, int? capacity = default, string capacityUnit = default)
        {
            Name = name;
            HasAccessLevel = hasAccessLevel;
            Capacity = capacity;
            CapacityUnit = capacityUnit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets determines if the capability can have additional
        /// rights associated with it. If true, the capability is visible in
        /// access hub and is part of ACL.
        /// </summary>
        [JsonProperty(PropertyName = "hasAccessLevel")]
        public bool? HasAccessLevel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "capacity")]
        public int? Capacity { get; set; }

        /// <summary>
        /// Gets or sets this is usually used to tell the application what the
        /// unit of measure is for the capacity. Eg gigabytes, number of
        /// sub-elements, etc.
        /// </summary>
        [JsonProperty(PropertyName = "capacityUnit")]
        public string CapacityUnit { get; set; }

    }
}
