// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.Identity.PlatformApiV4.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    public partial class ElementTreeResponse
    {
        /// <summary>
        /// Initializes a new instance of the ElementTreeResponse class.
        /// </summary>
        public ElementTreeResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ElementTreeResponse class.
        /// </summary>
        /// <param name="children">List of child elements.</param>
        /// <param name="elementId">The ID of the application element.</param>
        /// <param name="applicationId">The ID of the application. This is the
        /// same as the serviceId in developer.</param>
        /// <param name="applicationInstanceId">The globally unique identifier
        /// (GUID) for the application.</param>
        /// <param name="elementExternalId">the application's reference for the
        /// element. This is the same as the element id in the
        /// application.</param>
        /// <param name="elementType">the type of the element, used to describe
        /// the element in the application.</param>
        /// <param name="elementTypeIconUrl">The url element type icon. This is
        /// used to display the element in the application and access
        /// hub.</param>
        /// <param name="capabilities">Additional capabilities enabled for the
        /// application element.</param>
        /// <param name="accessHubElementUrl">Gets or sets the URL for
        /// accessing the hub element associated with this response.</param>
        /// <param name="accessHubApplicationUrl">Gets or sets the URL for
        /// accessing the application in the Access Hub.</param>
        /// <param name="name">The name of the tenant entity.</param>
        /// <param name="tenantId">The ID of the tenant.</param>
        /// <param name="properties">The extension properties of the tenant
        /// entity. extension properties are case-sensitive and shall user
        /// {appPrefix}_{propertyName} format, appPrefixes are defined in
        /// developer.veracity.com.</param>
        /// <param name="accessHubTenantHomeUrl">get the url to the tenants
        /// home page in access hub</param>
        /// <param name="systemTags">Gets or sets the list of system generated
        /// tags associated with the tenant entity.</param>
        /// <param name="tags">Gets or sets the list of tags associated with
        /// the tenant entity.</param>
        public ElementTreeResponse(IEnumerable<ElementTreeResponse> children = default, System.Guid? elementId = default, System.Guid? applicationId = default, System.Guid? applicationInstanceId = default, string elementExternalId = default, string elementType = default, string elementTypeIconUrl = default, IEnumerable<Capability> capabilities = default, IEnumerable<string> accessLevels = default, bool? isChild = default, System.Guid? parentId = default, int? elementLevel = default, string description = default, string accessHubElementUrl = default, string accessHubApplicationUrl = default, string name = default, System.Guid? tenantId = default, Metadata metadata = default, IEnumerable<ExtensionProperty> properties = default, string accessHubTenantHomeUrl = default, IEnumerable<string> systemTags = default, IEnumerable<string> tags = default)
        {
            Children = children;
            ElementId = elementId;
            ApplicationId = applicationId;
            ApplicationInstanceId = applicationInstanceId;
            ElementExternalId = elementExternalId;
            ElementType = elementType;
            ElementTypeIconUrl = elementTypeIconUrl;
            Capabilities = capabilities;
            AccessLevels = accessLevels;
            IsChild = isChild;
            ParentId = parentId;
            ElementLevel = elementLevel;
            Description = description;
            AccessHubElementUrl = accessHubElementUrl;
            AccessHubApplicationUrl = accessHubApplicationUrl;
            Name = name;
            TenantId = tenantId;
            Metadata = metadata;
            Properties = properties;
            AccessHubTenantHomeUrl = accessHubTenantHomeUrl;
            SystemTags = systemTags;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of child elements.
        /// </summary>
        [JsonProperty(PropertyName = "children")]
        public IEnumerable<ElementTreeResponse> Children { get; set; }

        /// <summary>
        /// Gets or sets the ID of the application element.
        /// </summary>
        [JsonProperty(PropertyName = "elementId")]
        public System.Guid? ElementId { get; set; }

        /// <summary>
        /// Gets or sets the ID of the application. This is the same as the
        /// serviceId in developer.
        /// </summary>
        [JsonProperty(PropertyName = "applicationId")]
        public System.Guid? ApplicationId { get; set; }

        /// <summary>
        /// Gets or sets the globally unique identifier (GUID) for the
        /// application.
        /// </summary>
        [JsonProperty(PropertyName = "applicationInstanceId")]
        public System.Guid? ApplicationInstanceId { get; set; }

        /// <summary>
        /// Gets or sets the application's reference for the element. This is
        /// the same as the element id in the application.
        /// </summary>
        [JsonProperty(PropertyName = "elementExternalId")]
        public string ElementExternalId { get; set; }

        /// <summary>
        /// Gets or sets the type of the element, used to describe the element
        /// in the application.
        /// </summary>
        [JsonProperty(PropertyName = "elementType")]
        public string ElementType { get; set; }

        /// <summary>
        /// Gets or sets the url element type icon. This is used to display the
        /// element in the application and access hub.
        /// </summary>
        [JsonProperty(PropertyName = "elementTypeIconUrl")]
        public string ElementTypeIconUrl { get; set; }

        /// <summary>
        /// Gets or sets additional capabilities enabled for the application
        /// element.
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public IEnumerable<Capability> Capabilities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accessLevels")]
        public IEnumerable<string> AccessLevels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isChild")]
        public bool? IsChild { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentId")]
        public System.Guid? ParentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "elementLevel")]
        public int? ElementLevel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the URL for accessing the hub element associated with
        /// this response.
        /// </summary>
        [JsonProperty(PropertyName = "accessHubElementUrl")]
        public string AccessHubElementUrl { get; set; }

        /// <summary>
        /// Gets or sets the URL for accessing the application in the Access
        /// Hub.
        /// </summary>
        [JsonProperty(PropertyName = "accessHubApplicationUrl")]
        public string AccessHubApplicationUrl { get; set; }

        /// <summary>
        /// Gets or sets the name of the tenant entity.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the ID of the tenant.
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public System.Guid? TenantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public Metadata Metadata { get; set; }

        /// <summary>
        /// Gets or sets the extension properties of the tenant entity.
        /// extension properties are case-sensitive and shall user
        /// {appPrefix}_{propertyName} format, appPrefixes are defined in
        /// developer.veracity.com.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IEnumerable<ExtensionProperty> Properties { get; set; }

        /// <summary>
        /// Gets or sets get the url to the tenants home page in access hub
        /// </summary>
        [JsonProperty(PropertyName = "accessHubTenantHomeUrl")]
        public string AccessHubTenantHomeUrl { get; set; }

        /// <summary>
        /// Gets or sets the list of system generated tags associated with the
        /// tenant entity.
        /// </summary>
        [JsonProperty(PropertyName = "systemTags")]
        public IEnumerable<string> SystemTags { get; set; }

        /// <summary>
        /// Gets or sets the list of tags associated with the tenant entity.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IEnumerable<string> Tags { get; set; }

    }
}
