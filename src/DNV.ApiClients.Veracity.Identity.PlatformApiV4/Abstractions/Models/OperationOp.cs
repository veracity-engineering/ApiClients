// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DNV.ApiClients.Veracity.Identity.PlatformApiV4.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OperationOp.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OperationOp
    {
        [EnumMember(Value = "add")]
        Add,
        [EnumMember(Value = "remove")]
        Remove,
        [EnumMember(Value = "replace")]
        Replace,
        [EnumMember(Value = "move")]
        Move,
        [EnumMember(Value = "copy")]
        Copy
    }
    internal static class OperationOpEnumExtension
    {
        internal static string ToSerializedValue(this OperationOp? value)
        {
            return value == null ? null : ((OperationOp)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this OperationOp value)
        {
            switch( value )
            {
                case OperationOp.Add:
                    return "add";
                case OperationOp.Remove:
                    return "remove";
                case OperationOp.Replace:
                    return "replace";
                case OperationOp.Move:
                    return "move";
                case OperationOp.Copy:
                    return "copy";
            }
            return null;
        }

        internal static OperationOp? ParseOperationOp(this string value)
        {
            switch( value )
            {
                case "add":
                    return OperationOp.Add;
                case "remove":
                    return OperationOp.Remove;
                case "replace":
                    return OperationOp.Replace;
                case "move":
                    return OperationOp.Move;
                case "copy":
                    return OperationOp.Copy;
            }
            return null;
        }
    }
}
