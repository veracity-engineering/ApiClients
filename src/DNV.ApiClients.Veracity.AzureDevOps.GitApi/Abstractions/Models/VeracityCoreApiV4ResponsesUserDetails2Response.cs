// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.AzureDevOps.GitApi.Models
{
    using Newtonsoft.Json;
    /// <summary>
    /// Represents the response containing user details.
    /// </summary>
    public partial class VeracityCoreApiV4ResponsesUserDetails2Response
    {
        /// <summary>
        /// Initializes a new instance of the
        /// VeracityCoreApiV4ResponsesUserDetails2Response class.
        /// </summary>
        public VeracityCoreApiV4ResponsesUserDetails2Response()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// VeracityCoreApiV4ResponsesUserDetails2Response class.
        /// </summary>
        /// <param name="userId">The veracity UserId for the user.</param>
        /// <param name="name">the users display name.</param>
        /// <param name="email">the users email address</param>
        /// <param name="phoneNumber">the users phone number</param>
        /// <param name="firstName">the users first name</param>
        /// <param name="lastName">the users last name</param>
        /// <param name="isServicePrincipal">Indicates if the user is a service
        /// principal or not.</param>
        /// <param name="isActivated">indicates if the user is activated or
        /// not.</param>
        public VeracityCoreApiV4ResponsesUserDetails2Response(System.Guid? userId = default, string name = default, string email = default, string phoneNumber = default, string firstName = default, string lastName = default, bool? isServicePrincipal = default, bool? isActivated = default)
        {
            UserId = userId;
            Name = name;
            Email = email;
            PhoneNumber = phoneNumber;
            FirstName = firstName;
            LastName = lastName;
            IsServicePrincipal = isServicePrincipal;
            IsActivated = isActivated;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the veracity UserId for the user.
        /// </summary>
        [JsonProperty(PropertyName = "userId")]
        public System.Guid? UserId { get; set; }

        /// <summary>
        /// Gets or sets the users display name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the users email address
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets the users phone number
        /// </summary>
        [JsonProperty(PropertyName = "phoneNumber")]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or sets the users first name
        /// </summary>
        [JsonProperty(PropertyName = "firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or sets the users last name
        /// </summary>
        [JsonProperty(PropertyName = "lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or sets indicates if the user is a service principal or not.
        /// </summary>
        [JsonProperty(PropertyName = "isServicePrincipal")]
        public bool? IsServicePrincipal { get; set; }

        /// <summary>
        /// Gets or sets indicates if the user is activated or not.
        /// </summary>
        [JsonProperty(PropertyName = "isActivated")]
        public bool? IsActivated { get; set; }

    }
}
