// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.AzureDevOps.GitApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    public partial class VeracityCommonHealthStatusApiHealthStatus
    {
        /// <summary>
        /// Initializes a new instance of the
        /// VeracityCommonHealthStatusApiHealthStatus class.
        /// </summary>
        public VeracityCommonHealthStatusApiHealthStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// VeracityCommonHealthStatusApiHealthStatus class.
        /// </summary>
        /// <param name="status">Possible values include: 'Pass', 'Warn',
        /// 'Fail'</param>
        public VeracityCommonHealthStatusApiHealthStatus(IEnumerable<VeracityCommonHealthStatusApiDependencyState> checks = default, VeracityCommonHealthStatusApiHealthStateTypes? status = default, string serviceId = default, string releaseId = default, string version = default, string description = default, IEnumerable<string> notes = default, string output = default, string message = default, string information = default, int? subCode = default, string supportCode = default, string correlationId = default)
        {
            Checks = checks;
            Status = status;
            ServiceId = serviceId;
            ReleaseId = releaseId;
            Version = version;
            Description = description;
            Notes = notes;
            Output = output;
            Message = message;
            Information = information;
            SubCode = subCode;
            SupportCode = supportCode;
            CorrelationId = correlationId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "checks")]
        public IEnumerable<VeracityCommonHealthStatusApiDependencyState> Checks { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Pass', 'Warn', 'Fail'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public VeracityCommonHealthStatusApiHealthStateTypes? Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "serviceId")]
        public string ServiceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "releaseId")]
        public string ReleaseId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notes")]
        public IEnumerable<string> Notes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "output")]
        public string Output { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "information")]
        public string Information { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subCode")]
        public int? SubCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supportCode")]
        public string SupportCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "correlationId")]
        public string CorrelationId { get; private set; }

    }
}
