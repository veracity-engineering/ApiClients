// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DNV.ApiClients.Veracity.AzureDevOps.GitApi.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for VeracityCoreApiV4ResponsesManagementModes.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum VeracityCoreApiV4ResponsesManagementModes
    {
        [EnumMember(Value = "Legacy")]
        Legacy,
        [EnumMember(Value = "VeracityManaged")]
        VeracityManaged,
        [EnumMember(Value = "Hybrid")]
        Hybrid,
        [EnumMember(Value = "ServiceManaged")]
        ServiceManaged
    }
    internal static class VeracityCoreApiV4ResponsesManagementModesEnumExtension
    {
        internal static string ToSerializedValue(this VeracityCoreApiV4ResponsesManagementModes? value)
        {
            return value == null ? null : ((VeracityCoreApiV4ResponsesManagementModes)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this VeracityCoreApiV4ResponsesManagementModes value)
        {
            switch( value )
            {
                case VeracityCoreApiV4ResponsesManagementModes.Legacy:
                    return "Legacy";
                case VeracityCoreApiV4ResponsesManagementModes.VeracityManaged:
                    return "VeracityManaged";
                case VeracityCoreApiV4ResponsesManagementModes.Hybrid:
                    return "Hybrid";
                case VeracityCoreApiV4ResponsesManagementModes.ServiceManaged:
                    return "ServiceManaged";
            }
            return null;
        }

        internal static VeracityCoreApiV4ResponsesManagementModes? ParseVeracityCoreApiV4ResponsesManagementModes(this string value)
        {
            switch( value )
            {
                case "Legacy":
                    return VeracityCoreApiV4ResponsesManagementModes.Legacy;
                case "VeracityManaged":
                    return VeracityCoreApiV4ResponsesManagementModes.VeracityManaged;
                case "Hybrid":
                    return VeracityCoreApiV4ResponsesManagementModes.Hybrid;
                case "ServiceManaged":
                    return VeracityCoreApiV4ResponsesManagementModes.ServiceManaged;
            }
            return null;
        }
    }
}
