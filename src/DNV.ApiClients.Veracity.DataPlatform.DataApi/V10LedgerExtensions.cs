// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using DNV.ApiClients.Veracity.DataPlatform.DataApi.Interfaces;

namespace DNV.ApiClients.Veracity.DataPlatform.DataApi
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for V10Ledger.
    /// </summary>
    public static partial class V10LedgerExtensions
    {
            /// <summary>
            /// Returns a list of ledger records
            /// </summary>
            /// <remarks>
            /// Endpoint returns a list of ledger records.
            /// A ledger record is an action done to a container, ex; creating a file,
            /// sharing a key.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceId'>
            /// Format - uuid. Veracity resource id
            /// </param>
            public static IEnumerable<ReadLedger> Get(this IV10Ledger operations, string resourceId)
            {
                return operations.GetAsync(resourceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a list of ledger records
            /// </summary>
            /// <remarks>
            /// Endpoint returns a list of ledger records.
            /// A ledger record is an action done to a container, ex; creating a file,
            /// sharing a key.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceId'>
            /// Format - uuid. Veracity resource id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<ReadLedger>> GetAsync(this IV10Ledger operations, string resourceId, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
