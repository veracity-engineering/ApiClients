// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using DNV.ApiClients.Veracity.DataPlatform.DataApi.Interfaces;

namespace DNV.ApiClients.Veracity.DataPlatform.DataApi
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for V10Groups.
    /// </summary>
    public static partial class V10GroupsExtensions
    {
            /// <summary>
            /// Retrieve a list of all groups for the User.
            /// </summary>
            /// <remarks>
            /// Retrieve a list of all groups for the User.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IEnumerable<GroupViewModel> Get(this IV10Groups operations)
            {
                return operations.GetAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of all groups for the User.
            /// </summary>
            /// <remarks>
            /// Retrieve a list of all groups for the User.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<GroupViewModel>> GetAsync(this IV10Groups operations, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a Group from the input parameters for User.
            /// </summary>
            /// <remarks>
            /// Creates a Group from the input parameters for User.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static GroupViewModel Post(this IV10Groups operations, GroupCreationInputParameters body = default)
            {
                return operations.PostAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a Group from the input parameters for User.
            /// </summary>
            /// <remarks>
            /// Creates a Group from the input parameters for User.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GroupViewModel> PostAsync(this IV10Groups operations, GroupCreationInputParameters body = default, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.PostWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve Group by Id for the User.
            /// </summary>
            /// <remarks>
            /// Retrieve Group by Id for the User.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Format - uuid. The GUID of the group.
            /// </param>
            public static GroupViewModel GetById(this IV10Groups operations, string id)
            {
                return operations.GetByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve Group by Id for the User.
            /// </summary>
            /// <remarks>
            /// Retrieve Group by Id for the User.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Format - uuid. The GUID of the group.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GroupViewModel> GetByIdAsync(this IV10Groups operations, string id, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.GetByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the given group with the parameters from the request body.
            /// </summary>
            /// <remarks>
            /// Updates the given group with the parameters from the request body.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Format - uuid. The GUID of the Group
            /// </param>
            /// <param name='body'>
            /// The group parameters.
            /// </param>
            public static void Put(this IV10Groups operations, string id, GroupCreationInputParameters body = default)
            {
                operations.PutAsync(id, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the given group with the parameters from the request body.
            /// </summary>
            /// <remarks>
            /// Updates the given group with the parameters from the request body.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Format - uuid. The GUID of the Group
            /// </param>
            /// <param name='body'>
            /// The group parameters.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task PutAsync(this IV10Groups operations, string id, GroupCreationInputParameters body = default, CancellationToken cancellationToken = default)
            {
                (await operations.PutWithHttpMessagesAsync(id, body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Will delete the Users given group, and remove references to resources, will
            /// NOT delete resources.
            /// </summary>
            /// <remarks>
            /// Will delete the Users given group, and remove references to resources, will
            /// NOT delete resources.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Format - uuid. The GUID of the group.
            /// </param>
            public static void Delete(this IV10Groups operations, string id)
            {
                operations.DeleteAsync(id).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Will delete the Users given group, and remove references to resources, will
            /// NOT delete resources.
            /// </summary>
            /// <remarks>
            /// Will delete the Users given group, and remove references to resources, will
            /// NOT delete resources.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Format - uuid. The GUID of the group.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IV10Groups operations, string id, CancellationToken cancellationToken = default)
            {
                (await operations.DeleteWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
