// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.DataPlatform.DataWorkbenchApiV2.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    public partial class ImportDatasetDTO
    {
        /// <summary>
        /// Initializes a new instance of the ImportDatasetDTO class.
        /// </summary>
        public ImportDatasetDTO()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImportDatasetDTO class.
        /// </summary>
        public ImportDatasetDTO(System.Guid datasetFolderId = default, string datasetName = default, string datasetDescription = default, IDictionary<string, IEnumerable<string>> tags = default, System.Guid? schemaId = default)
        {
            DatasetFolderId = datasetFolderId;
            DatasetName = datasetName;
            DatasetDescription = datasetDescription;
            Tags = tags;
            SchemaId = schemaId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datasetFolderId")]
        public System.Guid DatasetFolderId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datasetName")]
        public string DatasetName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datasetDescription")]
        public string DatasetDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, IEnumerable<string>> Tags { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schemaId")]
        public System.Guid? SchemaId { get; set; }

    }
}
