// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DNV.ApiClients.Veracity.DataPlatform.DataWorkbenchApiV2.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for StartJobResponses.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum StartJobResponses
    {
        [EnumMember(Value = "JobNotFound")]
        JobNotFound,
        [EnumMember(Value = "JobAlreadyStarted")]
        JobAlreadyStarted,
        [EnumMember(Value = "JobValidationFailed")]
        JobValidationFailed,
        [EnumMember(Value = "JobStarted")]
        JobStarted,
        [EnumMember(Value = "JobFinished")]
        JobFinished
    }
    internal static class StartJobResponsesEnumExtension
    {
        internal static string ToSerializedValue(this StartJobResponses? value)
        {
            return value == null ? null : ((StartJobResponses)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this StartJobResponses value)
        {
            switch( value )
            {
                case StartJobResponses.JobNotFound:
                    return "JobNotFound";
                case StartJobResponses.JobAlreadyStarted:
                    return "JobAlreadyStarted";
                case StartJobResponses.JobValidationFailed:
                    return "JobValidationFailed";
                case StartJobResponses.JobStarted:
                    return "JobStarted";
                case StartJobResponses.JobFinished:
                    return "JobFinished";
            }
            return null;
        }

        internal static StartJobResponses? ParseStartJobResponses(this string value)
        {
            switch( value )
            {
                case "JobNotFound":
                    return StartJobResponses.JobNotFound;
                case "JobAlreadyStarted":
                    return StartJobResponses.JobAlreadyStarted;
                case "JobValidationFailed":
                    return StartJobResponses.JobValidationFailed;
                case "JobStarted":
                    return StartJobResponses.JobStarted;
                case "JobFinished":
                    return StartJobResponses.JobFinished;
            }
            return null;
        }
    }
}
