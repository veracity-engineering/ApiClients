// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.DataPlatform.DataWorkbenchApiV2.Models
{
    using Newtonsoft.Json;
    public partial class StorageQueryDto
    {
        /// <summary>
        /// Initializes a new instance of the StorageQueryDto class.
        /// </summary>
        public StorageQueryDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageQueryDto class.
        /// </summary>
        /// <param name="readOrWritePermission">Possible values include:
        /// 'Read', 'Write'</param>
        public StorageQueryDto(string storageName = default, string path = default, StoragePermissionType? readOrWritePermission = default, System.DateTime? startsOn = default, System.DateTime expiresOn = default)
        {
            StorageName = storageName;
            Path = path;
            ReadOrWritePermission = readOrWritePermission;
            StartsOn = startsOn;
            ExpiresOn = expiresOn;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "storageName")]
        public string StorageName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Read', 'Write'
        /// </summary>
        [JsonProperty(PropertyName = "readOrWritePermission")]
        public StoragePermissionType? ReadOrWritePermission { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startsOn")]
        public System.DateTime? StartsOn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expiresOn")]
        public System.DateTime ExpiresOn { get; set; }

    }
}
