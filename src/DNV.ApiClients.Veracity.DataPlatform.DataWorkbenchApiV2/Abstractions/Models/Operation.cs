// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DNV.ApiClients.Veracity.DataPlatform.DataWorkbenchApiV2.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for Operation.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum Operation
    {
        [EnumMember(Value = "Create")]
        Create,
        [EnumMember(Value = "Append")]
        Append,
        [EnumMember(Value = "Overwrite")]
        Overwrite,
        [EnumMember(Value = "Upsert")]
        Upsert,
        [EnumMember(Value = "Delete")]
        Delete
    }
    internal static class OperationEnumExtension
    {
        internal static string ToSerializedValue(this Operation? value)
        {
            return value == null ? null : ((Operation)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this Operation value)
        {
            switch( value )
            {
                case Operation.Create:
                    return "Create";
                case Operation.Append:
                    return "Append";
                case Operation.Overwrite:
                    return "Overwrite";
                case Operation.Upsert:
                    return "Upsert";
                case Operation.Delete:
                    return "Delete";
            }
            return null;
        }

        internal static Operation? ParseOperation(this string value)
        {
            switch( value )
            {
                case "Create":
                    return Operation.Create;
                case "Append":
                    return Operation.Append;
                case "Overwrite":
                    return Operation.Overwrite;
                case "Upsert":
                    return Operation.Upsert;
                case "Delete":
                    return Operation.Delete;
            }
            return null;
        }
    }
}
