// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DNV.ApiClients.Veracity.DataPlatform.DataWorkbenchApiV2.Interfaces
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// ShareRequests operations.
    /// </summary>
    public partial interface IShareRequests
    {
        /// <summary>
        /// Create a share request
        /// </summary>
        /// <remarks>
        /// Sample request:
        ///
        /// {
        /// "receiverWorkspaceId": "a33060fe-de8f-469c-8cb2-864753f46d64",
        /// "schemaVersionId": "75ef9474-089f-4f77-9bcf-63cf9658387e",
        /// "columns": [
        /// "IMO",
        /// "Vessel_Name"
        /// ],
        /// "queryFilters": [
        /// {
        /// "column": "IMO",
        /// "filterType": "List",
        /// "filterValues": [
        /// "9226425",
        /// "9626053"
        /// ]
        /// }
        /// ],
        /// "notes": "Test notes"
        /// }
        ///
        /// Sample response:
        ///
        /// {
        /// "id": "1a940e6a-2e2e-4cc9-894d-807cb2d90d5f",
        /// "requestorWorkspaceId": "196a8ff4-dfbc-4ee7-ae08-4f38b84d9c86",
        /// "receiverWorkspaceId": "a33060fe-de8f-469c-8cb2-864753f46d64",
        /// "datasetRequestId": "6113fcaa-a29e-4804-b9a9-dac331676ee8",
        /// "schemaId": "28c9e18d-8beb-44a4-92c1-7cea2587977b",
        /// "schemaVersionId": "75ef9474-089f-4f77-9bcf-63cf9658387e",
        /// "columns": [
        /// "IMO",
        /// "Vessel_Name"
        /// ],
        /// "queryFilters": [
        /// {
        /// "column": "IMO",
        /// "filterType": "List",
        /// "filterValues": [
        /// "9226425",
        /// "9626053"
        /// ]
        /// }
        /// ],
        /// "notes": "Test notes",
        /// "status": "New",
        /// "createdBy": "55da50ee-20af-4bf1-aa7f-b5a64e72f09d",
        /// "createdOn": "2025-02-26T10:13:08.4101697Z"
        /// }
        /// </remarks>
        /// <param name='body'>
        /// </param>
        /// <param name='workspaceId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ShareRequestDto>> CreateShareRequestWithHttpMessagesAsync(ShareRequestCreationDto body, System.Guid workspaceId, Dictionary<string, IList<string>> customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Create a share request
        /// </summary>
        /// <remarks>
        /// Sample request:
        ///
        /// {
        /// "receiverWorkspaceId": "a33060fe-de8f-469c-8cb2-864753f46d64",
        /// "schemaVersionId": "75ef9474-089f-4f77-9bcf-63cf9658387e",
        /// "columns": [
        /// "IMO",
        /// "Vessel_Name"
        /// ],
        /// "queryFilters": [
        /// {
        /// "column": "IMO",
        /// "filterType": "List",
        /// "filterValues": [
        /// "9226425",
        /// "9626053"
        /// ]
        /// }
        /// ],
        /// "notes": "Test notes"
        /// }
        ///
        /// Sample response:
        ///
        /// {
        /// "id": "1a940e6a-2e2e-4cc9-894d-807cb2d90d5f",
        /// "requestorWorkspaceId": "196a8ff4-dfbc-4ee7-ae08-4f38b84d9c86",
        /// "receiverWorkspaceId": "a33060fe-de8f-469c-8cb2-864753f46d64",
        /// "datasetRequestId": "6113fcaa-a29e-4804-b9a9-dac331676ee8",
        /// "schemaId": "28c9e18d-8beb-44a4-92c1-7cea2587977b",
        /// "schemaVersionId": "75ef9474-089f-4f77-9bcf-63cf9658387e",
        /// "columns": [
        /// "IMO",
        /// "Vessel_Name"
        /// ],
        /// "queryFilters": [
        /// {
        /// "column": "IMO",
        /// "filterType": "List",
        /// "filterValues": [
        /// "9226425",
        /// "9626053"
        /// ]
        /// }
        /// ],
        /// "notes": "Test notes",
        /// "status": "New",
        /// "createdBy": "55da50ee-20af-4bf1-aa7f-b5a64e72f09d",
        /// "createdOn": "2025-02-26T10:13:08.4101697Z"
        /// }
        /// </remarks>
        /// <param name='body'>
        /// </param>
        /// <param name='workspaceId'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<ShareRequestDto> CreateShareRequestAsync(ShareRequestCreationDto body, System.Guid workspaceId, CancellationToken cancellationToken = default);

        /// <summary>
        /// Retrieves all share requests requested from the workspace or share
        /// requests requested to the workspace
        /// </summary>
        /// <remarks>
        /// Sample request(following parameters are optional except pageIndex):
        ///
        /// {
        /// "pageIndex": 1,
        /// "pageSize": 10,
        /// "sortColumn": "Status",
        /// "sortDirection": "Ascending",
        /// "isRequestor": true,
        /// "schemaIds": [
        /// "28c9e18d-8beb-44a4-92c1-7cea2587977b"
        /// ],
        /// "schemaVersionIds": [
        /// "75ef9474-089f-4f77-9bcf-63cf9658387e"
        /// ],
        /// "workspaceIds": [
        /// "a33060fe-de8f-469c-8cb2-864753f46d64"
        /// ],
        /// "statuses": [
        /// "New"
        /// ]
        /// }
        ///
        /// Sample response:
        ///
        /// {
        /// "result": [
        /// {
        /// "id": "1a940e6a-2e2e-4cc9-894d-807cb2d90d5f",
        /// "requestorWorkspaceId": "196a8ff4-dfbc-4ee7-ae08-4f38b84d9c86",
        /// "receiverWorkspaceId": "a33060fe-de8f-469c-8cb2-864753f46d64",
        /// "datasetRequestId": "5faf4e0a-0a12-4eb9-a82f-a71d076ebc33",
        /// "schemaId": "28c9e18d-8beb-44a4-92c1-7cea2587977b",
        /// "schemaVersionId": "75ef9474-089f-4f77-9bcf-63cf9658387e",
        /// "columns": [
        /// "IMO",
        /// "Vessel_Name"
        /// ],
        /// "queryFilters": [
        /// {
        /// "column": "IMO",
        /// "filterType": "List",
        /// "filterValues": [
        /// "9226425",
        /// "9626053"
        /// ]
        /// }
        /// ],
        /// "associatedShareId": "6f9d46bd-76b4-4b79-95fa-a2c5abd2bec7",
        /// "notes": "Test notes",
        /// "status": "New",
        /// "createdBy": "55da50ee-20af-4bf1-aa7f-b5a64e72f09d",
        /// "createdOn": "2025-02-26T10:13:08.4101697Z"
        /// }
        /// ],
        /// "pageIndex": 1,
        /// "pageSize": 10,
        /// "totalCount": 1,
        /// "totalPages": 1
        /// }
        /// </remarks>
        /// <param name='body'>
        /// </param>
        /// <param name='workspaceId'>
        /// Id of workspace(It can be a requestor workspace or a receiver
        /// workspace based on 'IsRequestor' query parameter)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ShareRequestDtoPaginatedResult>> QueryShareRequestsWithHttpMessagesAsync(QueryShareRequestDto body, System.Guid workspaceId, Dictionary<string, IList<string>> customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Retrieves all share requests requested from the workspace or share
        /// requests requested to the workspace
        /// </summary>
        /// <remarks>
        /// Sample request(following parameters are optional except pageIndex):
        ///
        /// {
        /// "pageIndex": 1,
        /// "pageSize": 10,
        /// "sortColumn": "Status",
        /// "sortDirection": "Ascending",
        /// "isRequestor": true,
        /// "schemaIds": [
        /// "28c9e18d-8beb-44a4-92c1-7cea2587977b"
        /// ],
        /// "schemaVersionIds": [
        /// "75ef9474-089f-4f77-9bcf-63cf9658387e"
        /// ],
        /// "workspaceIds": [
        /// "a33060fe-de8f-469c-8cb2-864753f46d64"
        /// ],
        /// "statuses": [
        /// "New"
        /// ]
        /// }
        ///
        /// Sample response:
        ///
        /// {
        /// "result": [
        /// {
        /// "id": "1a940e6a-2e2e-4cc9-894d-807cb2d90d5f",
        /// "requestorWorkspaceId": "196a8ff4-dfbc-4ee7-ae08-4f38b84d9c86",
        /// "receiverWorkspaceId": "a33060fe-de8f-469c-8cb2-864753f46d64",
        /// "datasetRequestId": "5faf4e0a-0a12-4eb9-a82f-a71d076ebc33",
        /// "schemaId": "28c9e18d-8beb-44a4-92c1-7cea2587977b",
        /// "schemaVersionId": "75ef9474-089f-4f77-9bcf-63cf9658387e",
        /// "columns": [
        /// "IMO",
        /// "Vessel_Name"
        /// ],
        /// "queryFilters": [
        /// {
        /// "column": "IMO",
        /// "filterType": "List",
        /// "filterValues": [
        /// "9226425",
        /// "9626053"
        /// ]
        /// }
        /// ],
        /// "associatedShareId": "6f9d46bd-76b4-4b79-95fa-a2c5abd2bec7",
        /// "notes": "Test notes",
        /// "status": "New",
        /// "createdBy": "55da50ee-20af-4bf1-aa7f-b5a64e72f09d",
        /// "createdOn": "2025-02-26T10:13:08.4101697Z"
        /// }
        /// ],
        /// "pageIndex": 1,
        /// "pageSize": 10,
        /// "totalCount": 1,
        /// "totalPages": 1
        /// }
        /// </remarks>
        /// <param name='body'>
        /// </param>
        /// <param name='workspaceId'>
        /// Id of workspace(It can be a requestor workspace or a receiver
        /// workspace based on 'IsRequestor' query parameter)
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<ShareRequestDtoPaginatedResult> QueryShareRequestsAsync(QueryShareRequestDto body, System.Guid workspaceId, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get share request
        /// </summary>
        /// <remarks>
        /// Sample request:
        ///
        /// GET /api/v2/{workspaceId}/shareRequests/{shareRequestId}
        /// /api/v2/196a8ff4-dfbc-4ee7-ae08-4f38b84d9c86/shareRequests/348b5dcf-edff-415b-9259-384b20932fc0
        ///
        /// Sample response:
        ///
        /// {
        /// "id": "1a940e6a-2e2e-4cc9-894d-807cb2d90d5f",
        /// "requestorWorkspaceId": "196a8ff4-dfbc-4ee7-ae08-4f38b84d9c86",
        /// "receiverWorkspaceId": "a33060fe-de8f-469c-8cb2-864753f46d64",
        /// "datasetRequestId": "6113fcaa-a29e-4804-b9a9-dac331676ee8",
        /// "schemaId": "28c9e18d-8beb-44a4-92c1-7cea2587977b",
        /// "schemaVersionId": "75ef9474-089f-4f77-9bcf-63cf9658387e",
        /// "columns": [
        /// "IMO",
        /// "Vessel_Name"
        /// ],
        /// "queryFilters": [
        /// {
        /// "column": "IMO",
        /// "filterType": "List",
        /// "filterValues": [
        /// "9226425",
        /// "9626053"
        /// ]
        /// }
        /// ],
        /// "associatedShareId": "4c46787e-946a-4265-9574-aaa1a1e4d2f0",
        /// "notes": "Test notes",
        /// "status": "New",
        /// "createdBy": "55da50ee-20af-4bf1-aa7f-b5a64e72f09d",
        /// "createdOn": "2025-02-26T10:13:08.4101697Z"
        /// }
        /// </remarks>
        /// <param name='workspaceId'>
        /// </param>
        /// <param name='shareRequestId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<ShareRequestDto>> GetShareRequestWithHttpMessagesAsync(System.Guid workspaceId, System.Guid shareRequestId, Dictionary<string, IList<string>> customHeaders = null, CancellationToken cancellationToken = default);

        /// <summary>
        /// Get share request
        /// </summary>
        /// <remarks>
        /// Sample request:
        ///
        /// GET /api/v2/{workspaceId}/shareRequests/{shareRequestId}
        /// /api/v2/196a8ff4-dfbc-4ee7-ae08-4f38b84d9c86/shareRequests/348b5dcf-edff-415b-9259-384b20932fc0
        ///
        /// Sample response:
        ///
        /// {
        /// "id": "1a940e6a-2e2e-4cc9-894d-807cb2d90d5f",
        /// "requestorWorkspaceId": "196a8ff4-dfbc-4ee7-ae08-4f38b84d9c86",
        /// "receiverWorkspaceId": "a33060fe-de8f-469c-8cb2-864753f46d64",
        /// "datasetRequestId": "6113fcaa-a29e-4804-b9a9-dac331676ee8",
        /// "schemaId": "28c9e18d-8beb-44a4-92c1-7cea2587977b",
        /// "schemaVersionId": "75ef9474-089f-4f77-9bcf-63cf9658387e",
        /// "columns": [
        /// "IMO",
        /// "Vessel_Name"
        /// ],
        /// "queryFilters": [
        /// {
        /// "column": "IMO",
        /// "filterType": "List",
        /// "filterValues": [
        /// "9226425",
        /// "9626053"
        /// ]
        /// }
        /// ],
        /// "associatedShareId": "4c46787e-946a-4265-9574-aaa1a1e4d2f0",
        /// "notes": "Test notes",
        /// "status": "New",
        /// "createdBy": "55da50ee-20af-4bf1-aa7f-b5a64e72f09d",
        /// "createdOn": "2025-02-26T10:13:08.4101697Z"
        /// }
        /// </remarks>
        /// <param name='workspaceId'>
        /// </param>
        /// <param name='shareRequestId'>
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<ShareRequestDto> GetShareRequestAsync(System.Guid workspaceId, System.Guid shareRequestId, CancellationToken cancellationToken = default);

    }
}
