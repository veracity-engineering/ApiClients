// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DNV.ApiClients.Veracity.DataPlatform.DataValidatorApi.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for MetaType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum MetaType
    {
        [EnumMember(Value = "NotApplicable")]
        NotApplicable,
        [EnumMember(Value = "FileName")]
        FileName,
        [EnumMember(Value = "UploadTime")]
        UploadTime,
        [EnumMember(Value = "RowCorrection")]
        RowCorrection
    }
    internal static class MetaTypeEnumExtension
    {
        internal static string ToSerializedValue(this MetaType? value)
        {
            return value == null ? null : ((MetaType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this MetaType value)
        {
            switch( value )
            {
                case MetaType.NotApplicable:
                    return "NotApplicable";
                case MetaType.FileName:
                    return "FileName";
                case MetaType.UploadTime:
                    return "UploadTime";
                case MetaType.RowCorrection:
                    return "RowCorrection";
            }
            return null;
        }

        internal static MetaType? ParseMetaType(this string value)
        {
            switch( value )
            {
                case "NotApplicable":
                    return MetaType.NotApplicable;
                case "FileName":
                    return MetaType.FileName;
                case "UploadTime":
                    return MetaType.UploadTime;
                case "RowCorrection":
                    return MetaType.RowCorrection;
            }
            return null;
        }
    }
}
