// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.Identity.ServicesApi.Models
{
    using Newtonsoft.Json;
    public partial class ServiceInfo
    {
        /// <summary>
        /// Initializes a new instance of the ServiceInfo class.
        /// </summary>
        public ServiceInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceInfo class.
        /// </summary>
        public ServiceInfo(bool publicProperty, bool inherited, bool selfSubscribe, string name = default, string shortDescription = default, string description = default, string apiAudience = default, string category = default, string id = default, string serviceOwner = default, string termsOfUse = default, System.DateTime? lastUpdated = default, string parentUrl = default, string parentId = default, string childrenUrl = default, string servicerUrl = default)
        {
            Name = name;
            ShortDescription = shortDescription;
            Description = description;
            ApiAudience = apiAudience;
            Category = category;
            PublicProperty = publicProperty;
            Id = id;
            Inherited = inherited;
            SelfSubscribe = selfSubscribe;
            ServiceOwner = serviceOwner;
            TermsOfUse = termsOfUse;
            LastUpdated = lastUpdated;
            ParentUrl = parentUrl;
            ParentId = parentId;
            ChildrenUrl = childrenUrl;
            ServicerUrl = servicerUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shortDescription")]
        public string ShortDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apiAudience")]
        public string ApiAudience { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "public")]
        public bool PublicProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inherited")]
        public bool Inherited { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "selfSubscribe")]
        public bool SelfSubscribe { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "serviceOwner")]
        public string ServiceOwner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "termsOfUse")]
        public string TermsOfUse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastUpdated")]
        public System.DateTime? LastUpdated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentUrl")]
        public string ParentUrl { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentId")]
        public string ParentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "childrenUrl")]
        public string ChildrenUrl { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "servicerUrl")]
        public string ServicerUrl { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
