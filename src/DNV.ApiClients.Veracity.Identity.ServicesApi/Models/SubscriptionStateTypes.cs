// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DNV.ApiClients.Veracity.Identity.ServicesApi.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for SubscriptionStateTypes.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SubscriptionStateTypes
    {
        [EnumMember(Value = "subscribing")]
        Subscribing,
        [EnumMember(Value = "pending")]
        Pending,
        [EnumMember(Value = "rejected")]
        Rejected,
        [EnumMember(Value = "notSubscribing")]
        NotSubscribing,
        [EnumMember(Value = "null")]
        Null,
        [EnumMember(Value = "error")]
        Error
    }
    internal static class SubscriptionStateTypesEnumExtension
    {
        internal static string ToSerializedValue(this SubscriptionStateTypes? value)
        {
            return value == null ? null : ((SubscriptionStateTypes)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this SubscriptionStateTypes value)
        {
            switch( value )
            {
                case SubscriptionStateTypes.Subscribing:
                    return "subscribing";
                case SubscriptionStateTypes.Pending:
                    return "pending";
                case SubscriptionStateTypes.Rejected:
                    return "rejected";
                case SubscriptionStateTypes.NotSubscribing:
                    return "notSubscribing";
                case SubscriptionStateTypes.Null:
                    return "null";
                case SubscriptionStateTypes.Error:
                    return "error";
            }
            return null;
        }

        internal static SubscriptionStateTypes? ParseSubscriptionStateTypes(this string value)
        {
            switch( value )
            {
                case "subscribing":
                    return SubscriptionStateTypes.Subscribing;
                case "pending":
                    return SubscriptionStateTypes.Pending;
                case "rejected":
                    return SubscriptionStateTypes.Rejected;
                case "notSubscribing":
                    return SubscriptionStateTypes.NotSubscribing;
                case "null":
                    return SubscriptionStateTypes.Null;
                case "error":
                    return SubscriptionStateTypes.Error;
            }
            return null;
        }
    }
}
