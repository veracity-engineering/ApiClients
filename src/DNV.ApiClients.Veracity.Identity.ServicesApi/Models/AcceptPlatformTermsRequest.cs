// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.Identity.ServicesApi.Models
{
    using Newtonsoft.Json;
    /// <summary>
    /// Accept platform or service terms
    /// </summary>
    public partial class AcceptPlatformTermsRequest
    {
        /// <summary>
        /// Initializes a new instance of the AcceptPlatformTermsRequest class.
        /// </summary>
        public AcceptPlatformTermsRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AcceptPlatformTermsRequest class.
        /// </summary>
        /// <param name="acceptPlatformTerms">Platform terms accepted</param>
        /// <param name="acceptServiceTerms">Service terms accepted</param>
        /// <param name="serviceId">The service id of the service terms</param>
        public AcceptPlatformTermsRequest(bool acceptPlatformTerms, bool acceptServiceTerms, string serviceId = default)
        {
            AcceptPlatformTerms = acceptPlatformTerms;
            AcceptServiceTerms = acceptServiceTerms;
            ServiceId = serviceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets platform terms accepted
        /// </summary>
        [JsonProperty(PropertyName = "acceptPlatformTerms")]
        public bool AcceptPlatformTerms { get; set; }

        /// <summary>
        /// Gets or sets service terms accepted
        /// </summary>
        [JsonProperty(PropertyName = "acceptServiceTerms")]
        public bool AcceptServiceTerms { get; set; }

        /// <summary>
        /// Gets or sets the service id of the service terms
        /// </summary>
        [JsonProperty(PropertyName = "serviceId")]
        public string ServiceId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
