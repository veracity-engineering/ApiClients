// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using DNV.ApiClients.Veracity.DataPlatform.ProvisionApi.Interfaces;

namespace DNV.ApiClients.Veracity.DataPlatform.ProvisionApi
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for V10Container.
    /// </summary>
    public static partial class V10ContainerExtensions
    {
            /// <summary>
            /// Create blob storage container
            /// </summary>
            /// <remarks>
            /// Provision a blob storage container, requires a short name and storage
            /// container
            /// To return correct values for "StorageLocation" use GET api/regions and use
            /// the "azureName"
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static System.Guid? ProvisionAzureBlobContainer(this IV10Container operations, ContainerInput body = default)
            {
                return operations.ProvisionAzureBlobContainerAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create blob storage container
            /// </summary>
            /// <remarks>
            /// Provision a blob storage container, requires a short name and storage
            /// container
            /// To return correct values for "StorageLocation" use GET api/regions and use
            /// the "azureName"
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<System.Guid?> ProvisionAzureBlobContainerAsync(this IV10Container operations, ContainerInput body = default, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.ProvisionAzureBlobContainerWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update Metadata
            /// </summary>
            /// <remarks>
            /// JSON Patch (https://tools.ietf.org/html/rfc6902) defines a JSON document
            /// structure for expressing a sequence of operations to apply to a JavaScript
            /// Object Notation (JSON) document; it is suitable for use with the HTTP PATCH
            /// method. The "application/json-patch+json" media type is used to identify
            /// such patch documents.
            ///
            /// Example in this case:
            /// {
            /// "value": "My new container name",
            /// "path": "Title",
            /// "op": "replace"
            /// },
            /// This operation would replace the title
            ///
            ///
            /// A other example for update of tags (NOTE: remember to update the list of
            /// tags with all the tags)
            /// {
            /// "value": [
            /// {
            /// "Title" :"First tag"
            /// },
            /// {
            /// "Title" : "Second tag"
            /// }
            ///
            /// ],
            /// "path": "Tags",
            /// "op": "replace"
            /// }
            /// This operation would replace the tags
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Format - uuid.
            /// </param>
            public static Resource UpdateMetadata(this IV10Container operations, string id)
            {
                return operations.UpdateMetadataAsync(id).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update Metadata
            /// </summary>
            /// <remarks>
            /// JSON Patch (https://tools.ietf.org/html/rfc6902) defines a JSON document
            /// structure for expressing a sequence of operations to apply to a JavaScript
            /// Object Notation (JSON) document; it is suitable for use with the HTTP PATCH
            /// method. The "application/json-patch+json" media type is used to identify
            /// such patch documents.
            ///
            /// Example in this case:
            /// {
            /// "value": "My new container name",
            /// "path": "Title",
            /// "op": "replace"
            /// },
            /// This operation would replace the title
            ///
            ///
            /// A other example for update of tags (NOTE: remember to update the list of
            /// tags with all the tags)
            /// {
            /// "value": [
            /// {
            /// "Title" :"First tag"
            /// },
            /// {
            /// "Title" : "Second tag"
            /// }
            ///
            /// ],
            /// "path": "Tags",
            /// "op": "replace"
            /// }
            /// This operation would replace the tags
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Format - uuid.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Resource> UpdateMetadataAsync(this IV10Container operations, string id, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.UpdateMetadataWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete blob storage container
            /// </summary>
            /// <remarks>
            /// Deletes the blob storage container&lt;br /&gt;
            /// You need to be the owner of the resource to be able to delete the
            /// container.&lt;br /&gt;
            /// What happens when the container is deleted: All active keys will stop
            /// working.&lt;br /&gt;
            /// All content on the container will be deleted and this action is not
            /// reversible &lt;br /&gt;
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Format - uuid. Resource id (GUID)
            /// </param>
            public static void DeleteAzureBlobContainer(this IV10Container operations, string id)
            {
                operations.DeleteAzureBlobContainerAsync(id).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete blob storage container
            /// </summary>
            /// <remarks>
            /// Deletes the blob storage container&lt;br /&gt;
            /// You need to be the owner of the resource to be able to delete the
            /// container.&lt;br /&gt;
            /// What happens when the container is deleted: All active keys will stop
            /// working.&lt;br /&gt;
            /// All content on the container will be deleted and this action is not
            /// reversible &lt;br /&gt;
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Format - uuid. Resource id (GUID)
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAzureBlobContainerAsync(this IV10Container operations, string id, CancellationToken cancellationToken = default)
            {
                (await operations.DeleteAzureBlobContainerWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Copy container
            /// </summary>
            /// <remarks>
            /// Copies a given Container with its content with access sharing ID.
            /// For successful requests, Returns 202 Accepted without waiting for container
            /// create or content copy is finished.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='accessId'>
            /// Format - uuid. Access Id
            /// </param>
            /// <param name='body'>
            /// Values required to copy a container.
            /// </param>
            public static System.Guid? CopyContainer(this IV10Container operations, string accessId, CopyContainerInputVM body = default)
            {
                return operations.CopyContainerAsync(accessId, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Copy container
            /// </summary>
            /// <remarks>
            /// Copies a given Container with its content with access sharing ID.
            /// For successful requests, Returns 202 Accepted without waiting for container
            /// create or content copy is finished.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='accessId'>
            /// Format - uuid. Access Id
            /// </param>
            /// <param name='body'>
            /// Values required to copy a container.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<System.Guid?> CopyContainerAsync(this IV10Container operations, string accessId, CopyContainerInputVM body = default, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.CopyContainerWithHttpMessagesAsync(accessId, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create subscription to changes in blob container
            /// </summary>
            /// <remarks>
            /// Provision a blob storage container subscription, requires container id,
            /// call back url and subscription name
            /// Subscription name must be unique through the entire application
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// Subscription request
            /// </param>
            public static void SubscribeToAzureBlobContainerEvents(this IV10Container operations, ContainerSystemSubscriptionRequestVm body = default)
            {
                operations.SubscribeToAzureBlobContainerEventsAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create subscription to changes in blob container
            /// </summary>
            /// <remarks>
            /// Provision a blob storage container subscription, requires container id,
            /// call back url and subscription name
            /// Subscription name must be unique through the entire application
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// Subscription request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task SubscribeToAzureBlobContainerEventsAsync(this IV10Container operations, ContainerSystemSubscriptionRequestVm body = default, CancellationToken cancellationToken = default)
            {
                (await operations.SubscribeToAzureBlobContainerEventsWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Delete subscription to changes in blob container
            /// </summary>
            /// <remarks>
            /// Deletes a blob storage container subscription, requires subscription name
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// Subscription deleting request
            /// </param>
            public static void UnsubscribeFromCustomEvents(this IV10Container operations, DeleteContainerSubscriptionRequestVm body = default)
            {
                operations.UnsubscribeFromCustomEventsAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete subscription to changes in blob container
            /// </summary>
            /// <remarks>
            /// Deletes a blob storage container subscription, requires subscription name
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// Subscription deleting request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UnsubscribeFromCustomEventsAsync(this IV10Container operations, DeleteContainerSubscriptionRequestVm body = default, CancellationToken cancellationToken = default)
            {
                (await operations.UnsubscribeFromCustomEventsWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Delete subscription to changes in blob container
            /// </summary>
            /// <remarks>
            /// Deletes a blob storage container subscription, requires subscription name
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// Subscription deleting request
            /// </param>
            public static void UnsubscribeFromAzureBlobContainerEvents(this IV10Container operations, DeleteContainerSubscriptionRequestVm body = default)
            {
                operations.UnsubscribeFromAzureBlobContainerEventsAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete subscription to changes in blob container
            /// </summary>
            /// <remarks>
            /// Deletes a blob storage container subscription, requires subscription name
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// Subscription deleting request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UnsubscribeFromAzureBlobContainerEventsAsync(this IV10Container operations, DeleteContainerSubscriptionRequestVm body = default, CancellationToken cancellationToken = default)
            {
                (await operations.UnsubscribeFromAzureBlobContainerEventsWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Create subscription for custom events
            /// </summary>
            /// <remarks>
            /// Provision custom event subscription for a specific topic, call back url and
            /// subscription name
            /// Subscription name must be unique through the entire application
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// Subscription request
            /// </param>
            public static void SubscribeToCustomEvents(this IV10Container operations, ContainerCustomSubscriptionRequestVm body = default)
            {
                operations.SubscribeToCustomEventsAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create subscription for custom events
            /// </summary>
            /// <remarks>
            /// Provision custom event subscription for a specific topic, call back url and
            /// subscription name
            /// Subscription name must be unique through the entire application
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// Subscription request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task SubscribeToCustomEventsAsync(this IV10Container operations, ContainerCustomSubscriptionRequestVm body = default, CancellationToken cancellationToken = default)
            {
                (await operations.SubscribeToCustomEventsWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
