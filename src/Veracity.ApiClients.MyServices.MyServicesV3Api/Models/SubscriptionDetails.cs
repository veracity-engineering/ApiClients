// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracity.ApiClients.MyServices.MyServicesV3Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SubscriptionDetails
    {
        /// <summary>
        /// Initializes a new instance of the SubscriptionDetails class.
        /// </summary>
        public SubscriptionDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SubscriptionDetails class.
        /// </summary>
        public SubscriptionDetails(ServiceReference service = default(ServiceReference), UserReference user = default(UserReference), RoleReference role = default(RoleReference), SubscriptionState subscriptionState = default(SubscriptionState))
        {
            Service = service;
            User = user;
            Role = role;
            SubscriptionState = subscriptionState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "service")]
        public ServiceReference Service { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user")]
        public UserReference User { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "role")]
        public RoleReference Role { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionState")]
        public SubscriptionState SubscriptionState { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Service != null)
            {
                Service.Validate();
            }
            if (User != null)
            {
                User.Validate();
            }
            if (SubscriptionState != null)
            {
                SubscriptionState.Validate();
            }
        }
    }
}
