// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracity.ApiClients.MyServices.MyServicesV3Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MyServiceReference
    {
        /// <summary>
        /// Initializes a new instance of the MyServiceReference class.
        /// </summary>
        public MyServiceReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MyServiceReference class.
        /// </summary>
        /// <param name="serviceUrl">the location of the application.</param>
        /// <param name="identity">The relative path to the resource
        /// details</param>
        public MyServiceReference(bool productionService, string serviceUrl = default(string), string identity = default(string), string name = default(string), string id = default(string), string description = default(string))
        {
            ServiceUrl = serviceUrl;
            Identity = identity;
            ProductionService = productionService;
            Name = name;
            Id = id;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the location of the application.
        /// </summary>
        [JsonProperty(PropertyName = "serviceUrl")]
        public string ServiceUrl { get; set; }

        /// <summary>
        /// Gets the relative path to the resource details
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public string Identity { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProductionService")]
        public bool ProductionService { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
