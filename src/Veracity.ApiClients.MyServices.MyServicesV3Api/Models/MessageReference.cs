// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Veracity.ApiClients.MyServices.MyServicesV3Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Contians the name, id and relative uri to the resource detilas
    /// </summary>
    public partial class MessageReference
    {
        /// <summary>
        /// Initializes a new instance of the MessageReference class.
        /// </summary>
        public MessageReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MessageReference class.
        /// </summary>
        /// <param name="deliverTime">The deliver time in utc</param>
        /// <param name="identity">The relative path to the resource
        /// details</param>
        public MessageReference(System.DateTime deliverTime, bool important, string identity = default(string), string fromProperty = default(string), string name = default(string), string id = default(string), string description = default(string))
        {
            Identity = identity;
            DeliverTime = deliverTime;
            FromProperty = fromProperty;
            Important = important;
            Name = name;
            Id = id;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the relative path to the resource details
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public string Identity { get; private set; }

        /// <summary>
        /// Gets or sets the deliver time in utc
        /// </summary>
        [JsonProperty(PropertyName = "deliverTime")]
        public System.DateTime DeliverTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public string FromProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "important")]
        public bool Important { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
