// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.DataPlatform.DataValidatorApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    public partial class MinimalSchemaDefinitionForWorkerDto
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MinimalSchemaDefinitionForWorkerDto class.
        /// </summary>
        public MinimalSchemaDefinitionForWorkerDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MinimalSchemaDefinitionForWorkerDto class.
        /// </summary>
        public MinimalSchemaDefinitionForWorkerDto(MinimalSchemaReferenceDto schemaRef = default, System.Guid? outputContainerId = default, IEnumerable<SchemaColumnDefinitionDto> columns = default, IDictionary<string, SchemaColumnValidatorDefinitionDto> columnValidators = default, IDictionary<string, SchemaRowValidatorDefinitionDto> rowValidators = default)
        {
            SchemaRef = schemaRef;
            OutputContainerId = outputContainerId;
            Columns = columns;
            ColumnValidators = columnValidators;
            RowValidators = rowValidators;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schemaRef")]
        public MinimalSchemaReferenceDto SchemaRef { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "outputContainerId")]
        public System.Guid? OutputContainerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "columns")]
        public IEnumerable<SchemaColumnDefinitionDto> Columns { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "columnValidators")]
        public IDictionary<string, SchemaColumnValidatorDefinitionDto> ColumnValidators { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rowValidators")]
        public IDictionary<string, SchemaRowValidatorDefinitionDto> RowValidators { get; set; }

    }
}
