// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.DataPlatform.DataValidatorApi.Models
{
    using Newtonsoft.Json;
    public partial class ValidationSummaryWriteDTO
    {
        /// <summary>
        /// Initializes a new instance of the ValidationSummaryWriteDTO class.
        /// </summary>
        public ValidationSummaryWriteDTO()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ValidationSummaryWriteDTO class.
        /// </summary>
        public ValidationSummaryWriteDTO(string region = default, System.DateTime? createdOn = default, System.Guid? schemaId = default, int? recordsProcessed = default, int? recordsFailed = default, int? failedValidations = default, int? validationsCount = default)
        {
            Region = region;
            CreatedOn = createdOn;
            SchemaId = schemaId;
            RecordsProcessed = recordsProcessed;
            RecordsFailed = recordsFailed;
            FailedValidations = failedValidations;
            ValidationsCount = validationsCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "region")]
        public string Region { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdOn")]
        public System.DateTime? CreatedOn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schemaId")]
        public System.Guid? SchemaId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "recordsProcessed")]
        public int? RecordsProcessed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "recordsFailed")]
        public int? RecordsFailed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "failedValidations")]
        public int? FailedValidations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "validationsCount")]
        public int? ValidationsCount { get; set; }

    }
}
