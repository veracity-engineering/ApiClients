// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DNV.ApiClients.Veracity.DataPlatform.DataWorkbenchApi
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// DataOrders operations.
    /// </summary>
    public partial interface IDataOrders
    {
        /// <summary>
        /// Create Data Order
        /// </summary>
        /// <remarks>
        /// Sample request For GPM Provider:
        ///
        /// POST {workspaceId}/DataOrder
        /// {
        /// "datasetName":"string",
        /// "providerType":"GPM",
        /// "properties":{
        /// "portfolioId" : "b259ccb2-5c07-46f8-afa2-ed0f21d912e4",
        /// "siteId": "EnergySite",
        /// "deviceParameters": [
        /// {
        /// "deviceIds": [
        /// "97c65480-9512-4067-8c2a-ef64a0ebb7db",
        /// "b1c80fc9-f548-47c7-a8a0-d41c635f6949"
        /// ],
        /// "parameters": [
        /// {
        /// "Name": "Energy",
        /// "Aggregation": "DEFAULT"
        /// },
        /// {
        /// "Name": "Power",
        /// "Aggregation": "LAST"
        /// }
        /// ]
        /// }
        /// ],
        /// "granularity": 1,
        /// "granularityUnit": "Hour",
        /// "interval": {
        /// "start": "2023-01-01T15:00:00",
        /// "end": "2023-01-01T20:00:00"
        /// }
        /// }
        /// }
        /// </remarks>
        /// <param name='body'>
        /// </param>
        /// <param name='workspaceId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<OrderReadDTO>> CreateOrderWithHttpMessagesAsync(OrderWriteDTO body, System.Guid workspaceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default);
        /// <summary>
        /// Get Order By Id
        /// </summary>
        /// <param name='workspaceId'>
        /// </param>
        /// <param name='orderId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<OrderReadDTO>> GetOrderWithHttpMessagesAsync(System.Guid workspaceId, System.Guid orderId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default);
    }
}
