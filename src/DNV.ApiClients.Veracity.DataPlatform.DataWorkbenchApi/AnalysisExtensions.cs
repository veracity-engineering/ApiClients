// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DNV.ApiClients.Veracity.DataPlatform.DataWorkbenchApi
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Analysis.
    /// </summary>
    public static partial class AnalysisExtensions
    {
            /// <summary>
            /// Execute Python on a dataset, upon completion a notificaiton will be
            /// triggered to user
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='workspaceId'>
            /// </param>
            public static void ExecutePython(this IAnalysis operations, ExecutionWriteDTO body, System.Guid workspaceId)
            {
                operations.ExecutePythonAsync(body, workspaceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Execute Python on a dataset, upon completion a notificaiton will be
            /// triggered to user
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='workspaceId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ExecutePythonAsync(this IAnalysis operations, ExecutionWriteDTO body, System.Guid workspaceId, CancellationToken cancellationToken = default)
            {
                (await operations.ExecutePythonWithHttpMessagesAsync(body, workspaceId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
