// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using DNV.ApiClients.Veracity.Identity.ServicesApiV3.Interfaces;

namespace DNV.ApiClients.Veracity.Identity.ServicesApiV3
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for DataContainerService.
    /// </summary>
    public static partial class DataContainerServiceExtensions
    {
            /// <summary>
            /// Get associated data containers for the service
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='serviceId'>
            /// </param>
            /// <param name='xSupportCode'>
            /// Provide a correlation token for log lookup. This is optional.
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// Veracity api management subscription key
            /// </param>
            public static IEnumerable<ItemReference> GetDataContainers(this IDataContainerService operations, string serviceId, string xSupportCode = default, string ocpApimSubscriptionKey = default)
            {
                return operations.GetDataContainersAsync(serviceId, xSupportCode, ocpApimSubscriptionKey).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get associated data containers for the service
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='serviceId'>
            /// </param>
            /// <param name='xSupportCode'>
            /// Provide a correlation token for log lookup. This is optional.
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// Veracity api management subscription key
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<ItemReference>> GetDataContainersAsync(this IDataContainerService operations, string serviceId, string xSupportCode = default, string ocpApimSubscriptionKey = default, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.GetDataContainersWithHttpMessagesAsync(serviceId, xSupportCode, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a data container reference
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='serviceId'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='xSupportCode'>
            /// Provide a correlation token for log lookup. This is optional.
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// Veracity api management subscription key
            /// </param>
            public static string CreateDataContainer(this IDataContainerService operations, string serviceId, string id, string name, string xSupportCode = default, string ocpApimSubscriptionKey = default)
            {
                return operations.CreateDataContainerAsync(serviceId, id, name, xSupportCode, ocpApimSubscriptionKey).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a data container reference
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='serviceId'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='xSupportCode'>
            /// Provide a correlation token for log lookup. This is optional.
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// Veracity api management subscription key
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> CreateDataContainerAsync(this IDataContainerService operations, string serviceId, string id, string name, string xSupportCode = default, string ocpApimSubscriptionKey = default, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.CreateDataContainerWithHttpMessagesAsync(serviceId, id, name, xSupportCode, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a data container reference
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='serviceId'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='xSupportCode'>
            /// Provide a correlation token for log lookup. This is optional.
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// Veracity api management subscription key
            /// </param>
            public static DataContainerServiceDeleteDataContainerHeaders DeleteDataContainer(this IDataContainerService operations, string serviceId, string id, string xSupportCode = default, string ocpApimSubscriptionKey = default)
            {
                return operations.DeleteDataContainerAsync(serviceId, id, xSupportCode, ocpApimSubscriptionKey).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a data container reference
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='serviceId'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='xSupportCode'>
            /// Provide a correlation token for log lookup. This is optional.
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// Veracity api management subscription key
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataContainerServiceDeleteDataContainerHeaders> DeleteDataContainerAsync(this IDataContainerService operations, string serviceId, string id, string xSupportCode = default, string ocpApimSubscriptionKey = default, CancellationToken cancellationToken = default)
            {
                using (var _result = await operations.DeleteDataContainerWithHttpMessagesAsync(serviceId, id, xSupportCode, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

    }
}
