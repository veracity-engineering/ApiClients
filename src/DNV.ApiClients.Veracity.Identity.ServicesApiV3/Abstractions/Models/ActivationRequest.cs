// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using System.Linq;

namespace DNV.ApiClients.Veracity.Identity.ServicesApiV3.Models
{
    using Newtonsoft.Json;
    public partial class ActivationRequest
    {
        /// <summary>
        /// Initializes a new instance of the ActivationRequest class.
        /// </summary>
        public ActivationRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ActivationRequest class.
        /// </summary>
        /// <param name="acceptPlatformTerms">Platform terms accepted</param>
        /// <param name="acceptServiceTerms">Service terms accepted</param>
        /// <param name="password">The password to set on the user
        /// account</param>
        /// <param name="passwordRepeat">Repeat the password</param>
        /// <param name="userId">The Veracity User Id</param>
        /// <param name="userDetails">Confirm the user details</param>
        /// <param name="email">the users email address. This is just used for
        /// validation, editing this will not change the email address of the
        /// user.</param>
        /// <param name="serviceId">The service id of the service terms</param>
        public ActivationRequest(bool acceptPlatformTerms, bool acceptServiceTerms, string password = default, string passwordRepeat = default, string userId = default, UserInfoUpdate userDetails = default, string email = default, string serviceId = default)
        {
            Password = password;
            PasswordRepeat = passwordRepeat;
            UserId = userId;
            UserDetails = userDetails;
            Email = email;
            AcceptPlatformTerms = acceptPlatformTerms;
            AcceptServiceTerms = acceptServiceTerms;
            ServiceId = serviceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the password to set on the user account
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets repeat the password
        /// </summary>
        [JsonProperty(PropertyName = "passwordRepeat")]
        public string PasswordRepeat { get; set; }

        /// <summary>
        /// Gets or sets the Veracity User Id
        /// </summary>
        [JsonProperty(PropertyName = "userId")]
        public string UserId { get; set; }

        /// <summary>
        /// Gets or sets confirm the user details
        /// </summary>
        [JsonProperty(PropertyName = "userDetails")]
        public UserInfoUpdate UserDetails { get; set; }

        /// <summary>
        /// Gets or sets the users email address. This is just used for
        /// validation, editing this will not change the email address of the
        /// user.
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets platform terms accepted
        /// </summary>
        [JsonProperty(PropertyName = "acceptPlatformTerms")]
        public bool AcceptPlatformTerms { get; set; }

        /// <summary>
        /// Gets or sets service terms accepted
        /// </summary>
        [JsonProperty(PropertyName = "acceptServiceTerms")]
        public bool AcceptServiceTerms { get; set; }

        /// <summary>
        /// Gets or sets the service id of the service terms
        /// </summary>
        [JsonProperty(PropertyName = "serviceId")]
        public string ServiceId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
