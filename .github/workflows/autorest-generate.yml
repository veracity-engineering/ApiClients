env:
  RELEASE: false
  YML_OUTPUT: nuget-output
on:
  workflow_call:
    inputs:
      config-file:
        required: true
        type: string
      project-name:
        type: string
        default: MyApi
      output-folder:
        type: string

jobs:
  autorest_generate:
    name: Autorest Generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .Net
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install AutoRest
        continue-on-error: true
        run: |
          npm install -g autorest
          autorest --version:3.5.1; exit 0

      - name: Generate Code
        run: |
          # clean up the configuration files to avoid conflicts with the autorest version installed by the action
          RESOURCE_FOLDER=$HOME/.autorest/@autorest_core@3.5.1/node_modules/@autorest/core/dist/resources
          echo '# Confiugration cleaned up' > $RESOURCE_FOLDER/plugin-csharp.md
          echo '# Confiugration cleaned up' > $RESOURCE_FOLDER/plugin-python.md
          echo '# Confiugration cleaned up' > $RESOURCE_FOLDER/plugin-typescript.md

          git pull  # make sure we have the latest version of the code in a rerun
          rm -rf ${{ inputs.output-folder }}/*

          autorest --version:3.5.1 ${{ inputs.config-file }}

      - name: Organize Code
        working-directory: ${{ inputs.output-folder }}
        run: |
          rm -f code-model-v1
          mkdir Abstractions Implementation
          mv Interfaces Models *Extensions.cs Abstractions/
          mv *.cs Implementation/

          cat >> Abstractions/${{ inputs.project-name }}.Abstractions.csproj << EOT
          <Project Sdk="Microsoft.NET.Sdk">
            <ItemGroup>
              <PackageReference Include="Microsoft.Rest.ClientRuntime" />
              <PackageReference Include="Newtonsoft.Json" />
            </ItemGroup>
          </Project>
          EOT

          cat >> Implementation/${{ inputs.project-name }}.csproj << EOT
          <Project Sdk="Microsoft.NET.Sdk">
            <ItemGroup>
            	<ProjectReference Include="../Abstractions/${{ inputs.project-name }}.Abstractions.csproj" />
            </ItemGroup>
          </Project>
          EOT

      - name: Commit and Push
        run: |
          git config user.email "actions-bot@users.noreply.github.com"
          git config user.name "github actions bot"
          git add .
          git commit -m "Update generated code" || echo "No change to push"

          echo "::debug::Push commit to remote"
          git push
