env:
  RELEASE: false
  YML_OUTPUT: nuget-output
on:
  workflow_call:
    inputs:
      input-file:
        required: true
        type: string
      csharp:
        type: boolean
      # typescript:
      #   type: boolean
      # python:
      #   type: boolean
      output-folder:
        type: string
      client-name:
        type: string
      namespace:
        type: string
      interface:
        type: string
        default: ''

jobs:
  autorest_generate:
    name: Autorest Generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
  
      - name: Setup .Net
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install AutoRest
        continue-on-error: true
        run: |
          npm install -g autorest
          autorest --version:3.5.1; exit 0

      - name: Generate Code
        run: |
          # clean up the configuration files to avoid conflicts with the autorest version installed by the action
          RESOURCE_FOLDER=$HOME/.autorest/@autorest_core@3.5.1/node_modules/@autorest/core/dist/resources
          echo '# Confiugration cleaned up' > $RESOURCE_FOLDER/plugin-csharp.md
          # echo '# Confiugration cleaned up' > $RESOURCE_FOLDER/plugin-python.md
          # echo '# Confiugration cleaned up' > $RESOURCE_FOLDER/plugin-typescript.md

          git pull  # make sure we have the latest version of the code in a rerun
          find ${{ inputs.output-folder }} -name "*.cs" -type f -delete

          autorest \
            --version:3.5.1 \
            --input-file:${{ inputs.input-file }} \
            --output-folder:${{ inputs.output-folder }} \
            --override-client-name:${{ inputs.client-name }} \
            --namespace:${{ inputs.namespace }} \
            --csharp:${{ inputs.csharp }} \
            --interface:${{ inputs.interface }} \
            --use:@cuteribs/autorest.csharp@latest
            # --typescript:${{ inputs.typescript }} \
            # --python:${{ inputs.python }} \
            # --use:@cuteribs/autorest.python@latest \
            # --use:@cuteribs/autorest.typescript@latest \

          rm -f ${{ inputs.output-folder }}/code-model-v1
          
          mkdir Abstractions Implementation
          mv Interfaces Models *Extensions.cs Abstractions/
          mv *.cs Implementation/

          git config user.email "actions-bot@users.noreply.github.com"
          git config user.name "github actions bot"
          git add .
          git commit -m "Update generated code" || echo "No change to commit"
    
          echo "::debug::Push commit to remote"
          git push
